package UI;


import Database.DBConnectionProvider;
import Others.Functions;
import UI.BigPopUp.ProductsTable;
import UI.BigPopUp.ViewStock;
import UI.PopUp.DeleteProducts;
import UI.PopUp.NoConnection;
import UI.PopUp.NoValue;
import UI.PopUp.Save;
import UI.PopUp.Updated;
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import static java.lang.Thread.sleep;
import java.text.SimpleDateFormat;
import java.util.*;
import javax.swing.ImageIcon;
import rakibs.traders.RakibsTraders;

/**
 *
 * @author RH Rafi
 */
public class Products extends javax.swing.JFrame {

    /**
     * Creates new form Products
     */
    public Products() {
        initComponents();
        //initComboCompanyName();
        initComboProductID();
        initComboItemUnit();
        setIcon();
        //setTime();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblHome = new javax.swing.JLabel();
        lblAdmin = new javax.swing.JLabel();
        lblTitle = new javax.swing.JLabel();
        lblProductID = new javax.swing.JLabel();
        txtFieldProductID = new javax.swing.JTextField();
        btnBuy = new javax.swing.JButton();
        btnSell = new javax.swing.JButton();
        btnProducts = new javax.swing.JButton();
        btnStock = new javax.swing.JButton();
        btnReturnProducts = new javax.swing.JButton();
        btnReports = new javax.swing.JButton();
        btnSettings = new javax.swing.JButton();
        btnViewProduct = new javax.swing.JButton();
        btnViewStock = new javax.swing.JButton();
        btnRefrash = new javax.swing.JButton();
        lblPageTitle = new javax.swing.JLabel();
        lblCompanyName = new javax.swing.JLabel();
        lblModel = new javax.swing.JLabel();
        lblDimension = new javax.swing.JLabel();
        lblPcs = new javax.swing.JLabel();
        lblItemUnit = new javax.swing.JLabel();
        lblPurchaseprice = new javax.swing.JLabel();
        lblSellingPrice = new javax.swing.JLabel();
        lblNotes = new javax.swing.JLabel();
        txtFieldCompanyName = new javax.swing.JTextField();
        txtFieldModel = new javax.swing.JTextField();
        txtFieldDimension = new javax.swing.JTextField();
        txtFieldPcsPerBox = new javax.swing.JTextField();
        txtFieldItemUnit = new javax.swing.JTextField();
        txtFieldPurchasePrice = new javax.swing.JTextField();
        txtFieldSellingPrice = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAreanotes = new javax.swing.JTextArea();
        btnDelete = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        lblTime = new javax.swing.JLabel();
        btnExpenses = new javax.swing.JButton();
        Background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblHome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/Logo.png"))); // NOI18N
        lblHome.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblHome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblHomeMouseClicked(evt);
            }
        });
        getContentPane().add(lblHome, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 130, 40));

        lblAdmin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/Admin + icon.png"))); // NOI18N
        lblAdmin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblAdmin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblAdminMouseClicked(evt);
            }
        });
        getContentPane().add(lblAdmin, new org.netbeans.lib.awtextra.AbsoluteConstraints(1128, 11, 110, -1));

        lblTitle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/DASHBOARD.png"))); // NOI18N
        getContentPane().add(lblTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 0, 200, 88));

        lblProductID.setForeground(new java.awt.Color(255, 255, 255));
        lblProductID.setText("Product ID: ");
        getContentPane().add(lblProductID, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 140, 80, 20));

        txtFieldProductID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFieldProductIDActionPerformed(evt);
            }
        });
        getContentPane().add(txtFieldProductID, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 140, 310, 20));

        btnBuy.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/BUY.png"))); // NOI18N
        btnBuy.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                btnBuyFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                btnBuyFocusLost(evt);
            }
        });
        btnBuy.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnBuyMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnBuyMouseExited(evt);
            }
        });
        btnBuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuyActionPerformed(evt);
            }
        });
        getContentPane().add(btnBuy, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 160, 138, 23));

        btnSell.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/Sell.png"))); // NOI18N
        btnSell.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnSellMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnSellMouseExited(evt);
            }
        });
        btnSell.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSellActionPerformed(evt);
            }
        });
        getContentPane().add(btnSell, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, 138, 23));

        btnProducts.setBackground(new java.awt.Color(67, 196, 114));
        btnProducts.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/Products_G.png"))); // NOI18N
        btnProducts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProductsActionPerformed(evt);
            }
        });
        getContentPane().add(btnProducts, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 200, 138, 23));

        btnStock.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/Stock.png"))); // NOI18N
        btnStock.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnStockMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnStockMouseExited(evt);
            }
        });
        btnStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStockActionPerformed(evt);
            }
        });
        getContentPane().add(btnStock, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 240, 138, 23));

        btnReturnProducts.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/Return Products.png"))); // NOI18N
        btnReturnProducts.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnReturnProductsMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnReturnProductsMouseExited(evt);
            }
        });
        btnReturnProducts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReturnProductsActionPerformed(evt);
            }
        });
        getContentPane().add(btnReturnProducts, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 280, 138, 23));

        btnReports.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/Reports.png"))); // NOI18N
        btnReports.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnReportsMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnReportsMouseExited(evt);
            }
        });
        btnReports.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReportsActionPerformed(evt);
            }
        });
        getContentPane().add(btnReports, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 320, 138, 23));

        btnSettings.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/Settings.png"))); // NOI18N
        btnSettings.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnSettingsMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnSettingsMouseExited(evt);
            }
        });
        btnSettings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSettingsActionPerformed(evt);
            }
        });
        getContentPane().add(btnSettings, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 360, 138, 23));

        btnViewProduct.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/view product list.png"))); // NOI18N
        btnViewProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewProductActionPerformed(evt);
            }
        });
        getContentPane().add(btnViewProduct, new org.netbeans.lib.awtextra.AbsoluteConstraints(1005, 130, 219, 33));

        btnViewStock.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/view Stock.png"))); // NOI18N
        btnViewStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewStockActionPerformed(evt);
            }
        });
        getContentPane().add(btnViewStock, new org.netbeans.lib.awtextra.AbsoluteConstraints(1005, 181, 219, 33));

        btnRefrash.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/Refresh.png"))); // NOI18N
        btnRefrash.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefrashActionPerformed(evt);
            }
        });
        getContentPane().add(btnRefrash, new org.netbeans.lib.awtextra.AbsoluteConstraints(1005, 232, 219, 33));

        lblPageTitle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/ADD PRODUCTS.png"))); // NOI18N
        getContentPane().add(lblPageTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(222, 99, 304, 43));

        lblCompanyName.setForeground(new java.awt.Color(255, 255, 255));
        lblCompanyName.setText("Company Name :");
        getContentPane().add(lblCompanyName, new org.netbeans.lib.awtextra.AbsoluteConstraints(222, 175, 103, 23));

        lblModel.setForeground(new java.awt.Color(255, 255, 255));
        lblModel.setText("Model :");
        getContentPane().add(lblModel, new org.netbeans.lib.awtextra.AbsoluteConstraints(222, 209, 103, 23));

        lblDimension.setForeground(new java.awt.Color(255, 255, 255));
        lblDimension.setText("Dimension :");
        getContentPane().add(lblDimension, new org.netbeans.lib.awtextra.AbsoluteConstraints(222, 243, 103, 23));

        lblPcs.setForeground(new java.awt.Color(255, 255, 255));
        lblPcs.setText("PCS Per Box :");
        getContentPane().add(lblPcs, new org.netbeans.lib.awtextra.AbsoluteConstraints(222, 277, 103, 23));

        lblItemUnit.setForeground(new java.awt.Color(255, 255, 255));
        lblItemUnit.setText("Item Unit :");
        getContentPane().add(lblItemUnit, new org.netbeans.lib.awtextra.AbsoluteConstraints(222, 311, 103, 23));

        lblPurchaseprice.setForeground(new java.awt.Color(255, 255, 255));
        lblPurchaseprice.setText("Purchase Price :");
        getContentPane().add(lblPurchaseprice, new org.netbeans.lib.awtextra.AbsoluteConstraints(222, 345, 103, 23));

        lblSellingPrice.setForeground(new java.awt.Color(255, 255, 255));
        lblSellingPrice.setText("Selling Price :");
        getContentPane().add(lblSellingPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(222, 379, 103, 23));

        lblNotes.setForeground(new java.awt.Color(255, 255, 255));
        lblNotes.setText("Notes :");
        getContentPane().add(lblNotes, new org.netbeans.lib.awtextra.AbsoluteConstraints(222, 408, 103, 23));

        txtFieldCompanyName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtFieldCompanyNameFocusGained(evt);
            }
        });
        getContentPane().add(txtFieldCompanyName, new org.netbeans.lib.awtextra.AbsoluteConstraints(329, 175, 588, 23));

        txtFieldModel.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtFieldModelFocusGained(evt);
            }
        });
        txtFieldModel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFieldModelActionPerformed(evt);
            }
        });
        getContentPane().add(txtFieldModel, new org.netbeans.lib.awtextra.AbsoluteConstraints(329, 209, 588, 23));

        txtFieldDimension.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtFieldDimensionFocusGained(evt);
            }
        });
        txtFieldDimension.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFieldDimensionActionPerformed(evt);
            }
        });
        getContentPane().add(txtFieldDimension, new org.netbeans.lib.awtextra.AbsoluteConstraints(329, 244, 588, -1));

        txtFieldPcsPerBox.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtFieldPcsPerBoxFocusGained(evt);
            }
        });
        txtFieldPcsPerBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFieldPcsPerBoxActionPerformed(evt);
            }
        });
        getContentPane().add(txtFieldPcsPerBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(329, 278, 588, -1));

        txtFieldItemUnit.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtFieldItemUnitFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFieldItemUnitFocusLost(evt);
            }
        });
        txtFieldItemUnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFieldItemUnitActionPerformed(evt);
            }
        });
        getContentPane().add(txtFieldItemUnit, new org.netbeans.lib.awtextra.AbsoluteConstraints(329, 312, 588, -1));
        getContentPane().add(txtFieldPurchasePrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(329, 346, 588, -1));
        getContentPane().add(txtFieldSellingPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(329, 380, 588, -1));

        txtAreanotes.setColumns(20);
        txtAreanotes.setRows(5);
        jScrollPane1.setViewportView(txtAreanotes);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(329, 408, 588, 72));

        btnDelete.setBackground(new java.awt.Color(0, 0, 0));
        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/Delete.png"))); // NOI18N
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        getContentPane().add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 500, 70, 20));

        btnUpdate.setBackground(new java.awt.Color(11, 66, 169));
        btnUpdate.setFont(new java.awt.Font("Tahoma", 0, 8)); // NOI18N
        btnUpdate.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdate.setText("UDPATE");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        getContentPane().add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 500, 70, 20));

        btnSave.setBackground(new java.awt.Color(0, 0, 0));
        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/save.png"))); // NOI18N
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        getContentPane().add(btnSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 500, 70, 20));

        lblTime.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblTime.setForeground(new java.awt.Color(255, 255, 255));
        lblTime.setText("Time: ");
        getContentPane().add(lblTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 40, 230, 30));

        btnExpenses.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/Expenses.png"))); // NOI18N
        btnExpenses.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnExpensesMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnExpensesMouseExited(evt);
            }
        });
        btnExpenses.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExpensesActionPerformed(evt);
            }
        });
        getContentPane().add(btnExpenses, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 400, 138, 23));

        Background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/background.png"))); // NOI18N
        getContentPane().add(Background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1280, 669));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lblHomeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblHomeMouseClicked
        // TODO add your handling code here:
        
        Sell page = Sell.getRef();
        page.setFlagTime();
        page.setTime();
        this.setFlagTime();
        RakibsTraders.changeFrame(this, page);
    }//GEN-LAST:event_lblHomeMouseClicked

    private void lblAdminMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAdminMouseClicked
        // TODO add your handling code here:
        Functions.logoutLog();
        LoginPage page = LoginPage.getRef();
        page.clearField();
        RakibsTraders.changeFrame(this, page);
    }//GEN-LAST:event_lblAdminMouseClicked

    private void btnBuyFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnBuyFocusGained
        // TODO add your handling code here:      
    }//GEN-LAST:event_btnBuyFocusGained

    private void btnBuyFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnBuyFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_btnBuyFocusLost

    private void btnBuyMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBuyMouseEntered
        // will change to green picture:
        btnBuy.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/BUY_G.png")));
    }//GEN-LAST:event_btnBuyMouseEntered

    private void btnBuyMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBuyMouseExited
        // will change to white picture:
        btnBuy.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/BUY.png")));
    }//GEN-LAST:event_btnBuyMouseExited

    private void btnSellMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSellMouseEntered
        // gren:
        btnSell.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/Sell_G.png")));
    }//GEN-LAST:event_btnSellMouseEntered

    private void btnSellMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSellMouseExited
        // white:
        btnSell.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/Sell.png")));
    }//GEN-LAST:event_btnSellMouseExited

    private void btnStockMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnStockMouseEntered
        // green
        btnStock.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/Stock_G.png")));
    }//GEN-LAST:event_btnStockMouseEntered

    private void btnStockMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnStockMouseExited
        // white:
        btnStock.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/Stock.png")));
    }//GEN-LAST:event_btnStockMouseExited

    private void btnReturnProductsMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnReturnProductsMouseEntered
        // green:
        btnReturnProducts.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/Return Products_G.png")));
    }//GEN-LAST:event_btnReturnProductsMouseEntered

    private void btnReturnProductsMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnReturnProductsMouseExited
        // white:
        btnReturnProducts.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/Return Products.png")));
    }//GEN-LAST:event_btnReturnProductsMouseExited

    private void btnReportsMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnReportsMouseEntered
        // green:
        btnReports.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/Reports_G.png")));
    }//GEN-LAST:event_btnReportsMouseEntered

    private void btnReportsMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnReportsMouseExited
        // white:
        btnReports.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/Reports.png")));
    }//GEN-LAST:event_btnReportsMouseExited

    private void btnSettingsMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSettingsMouseEntered
        // Green:
        btnSettings.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/Settings_G.png")));
    }//GEN-LAST:event_btnSettingsMouseEntered

    private void btnSettingsMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSettingsMouseExited
        // White:
        btnSettings.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/Settings.png")));
    }//GEN-LAST:event_btnSettingsMouseExited

    private void btnViewProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewProductActionPerformed
        // TODO add your handling code here:
        ProductsTable products = new ProductsTable();
        products.setCaller(this);
        RakibsTraders.bigPopUp(products);
        this.setEnabled(false);
    }//GEN-LAST:event_btnViewProductActionPerformed

    private void btnRefrashActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefrashActionPerformed
        // TODO add your handling code here:
        clearField();
    }//GEN-LAST:event_btnRefrashActionPerformed

    private void btnSettingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSettingsActionPerformed
        // TODO add your handling code here:
        Settings page = Settings.getRef();
        page.setFlagTime();
        page.setTime();
        this.setFlagTime();
        RakibsTraders.changeFrame(this, page);
    }//GEN-LAST:event_btnSettingsActionPerformed

    private void btnReturnProductsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReturnProductsActionPerformed
        // TODO add your handling code here:
        ReturnProducts page = ReturnProducts.getRef();
        page.setFlagTime();
        page.setTime();
        this.setFlagTime();
        RakibsTraders.changeFrame(this, page);
    }//GEN-LAST:event_btnReturnProductsActionPerformed

    private void txtFieldModelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFieldModelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFieldModelActionPerformed

    private void txtFieldPcsPerBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFieldPcsPerBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFieldPcsPerBoxActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        if(checkField()){
            NoValue page = new NoValue();
            page.setCaller(this);
            RakibsTraders.popUp(page);
            this.setEnabled(false);
        }else if(txtFieldProductID.getText().equals("")){
            Connection con = DBConnectionProvider.getDBConnection();
            String query = "INSERT INTO `products` (`products_id`, `company_name`, `model`, `dimension`, `pcs_per_box`, `item_unit`, `purchase_price`, `selling_price`, `notes`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)";
            String query2 = "INSERT INTO `stock` (`products_id`, `left`) VALUES (?, 0)";


            try{
                PreparedStatement pstmt = con.prepareStatement(query);
                PreparedStatement pstmt2 = con.prepareStatement(query2);
                String companyName = this.txtFieldCompanyName.getText();
                String model = this.txtFieldModel.getText();
                String product_id = Functions.productIDGenerator(model);//call id generator here
                //String product_id = "testing1";
                String dimension = this.txtFieldDimension.getText();
                Integer pcsPerbox = Integer.parseInt(this.txtFieldPcsPerBox.getText());
                String itemUnit = this.txtFieldItemUnit.getText();
                Double purchasePrice = Double.parseDouble(this.txtFieldPurchasePrice.getText());
                Double sellingPrice = Double.parseDouble(this.txtFieldSellingPrice.getText());
                String notes = this.txtAreanotes.getText();
                pstmt.setString(1, product_id);
                pstmt2.setString(1, product_id);
                pstmt.setString(2, companyName);
                pstmt.setString(3, model);
                pstmt.setString(4, dimension);
                pstmt.setInt(5, pcsPerbox);
                pstmt.setString(6, itemUnit);
                pstmt.setDouble(7, purchasePrice);
                pstmt.setDouble(8, sellingPrice);
                pstmt.setString(9, notes);
                if(product_id.equals("0"))
                    throw new Exception("product id null");
                else{
                    pstmt.executeUpdate();
                    pstmt2.executeUpdate();
                    Save sv = new Save();
                    RakibsTraders.popUp(sv);
                    clearField();
                }
            } catch(Exception ex){
                System.out.println("Failed to get DBConn:: "+ex.getMessage());
                NoConnection no = new NoConnection();
                RakibsTraders.popUp(no);
            }
        }
        
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        if(checkField()){
            NoValue page = new NoValue();
            RakibsTraders.popUp(page);
        }else{
            Connection con = DBConnectionProvider.getDBConnection();
            String query = "UPDATE products SET company_name = ?, model = ?, dimension = ?, pcs_per_box = ?,item_unit = ?,purchase_price = ?,selling_price = ?,notes = ?  WHERE  products_id = ?";
            try{
                PreparedStatement pstmt = con.prepareStatement(query);
                String product_ID = txtFieldProductID.getText();
                String companyName = this.txtFieldCompanyName.getText();
                String model = this.txtFieldModel.getText();
                String dimension = this.txtFieldDimension.getText();
                Integer pcsPerbox = Integer.parseInt(this.txtFieldPcsPerBox.getText());
                String itemUnit = this.txtFieldItemUnit.getText();
                Double purchasePrice = Double.parseDouble(this.txtFieldPurchasePrice.getText());
                Double sellingPrice = Double.parseDouble(this.txtFieldSellingPrice.getText());
                String notes = this.txtAreanotes.getText();
                pstmt.setString(1,companyName);
                pstmt.setString(2,model);
                pstmt.setString(3,dimension);
                pstmt.setInt(4,pcsPerbox);
                pstmt.setString(5,itemUnit);
                pstmt.setDouble(6,purchasePrice);
                pstmt.setDouble(7,sellingPrice);
                pstmt.setString(8,notes);
                pstmt.setString(9,product_ID);
                pstmt.executeUpdate();
                clearField();
                Updated up = new Updated();
                RakibsTraders.popUp(up);
            }catch(Exception ex){
                System.out.println("Failed to get DBConn:: "+ex.getMessage());
                NoConnection no = new NoConnection();
                RakibsTraders.popUp(no);
            }
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        String companyName = this.txtFieldCompanyName.getText();
        String productID = this.txtFieldProductID.getText();
        String model = this.txtFieldModel.getText();
        String dimension = this.txtFieldDimension.getText();
        DeleteProducts dlt = new DeleteProducts();
        dlt.setValue(productID);
        dlt.setCaller(this);
        RakibsTraders.popUp(dlt);
        clearField();
        this.setEnabled(false);
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void txtFieldDimensionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFieldDimensionActionPerformed
        // TODO add your handling code here:   
    }//GEN-LAST:event_txtFieldDimensionActionPerformed

    private void txtFieldPcsPerBoxFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFieldPcsPerBoxFocusGained
        // TODO add your handling code here:
        Connection con = DBConnectionProvider.getDBConnection();
        String query = "SELECT pcs_per_box, item_unit, purchase_price, selling_price, notes FROM products WHERE company_name = ? and model = ? and dimension = ?";
        try{
            PreparedStatement pstmt = con.prepareStatement(query);
            String companyName = this.txtFieldCompanyName.getText();
            String model = this.txtFieldModel.getText();
            String dimension = this.txtFieldDimension.getText();
            pstmt.setString(1,companyName);
            pstmt.setString(2,model);
            pstmt.setString(3,dimension);
            ResultSet rs = pstmt.executeQuery();
            while(rs.next()){
              this.txtFieldPcsPerBox.setText(Integer.toString(rs.getInt("pcs_per_box")));
              this.txtFieldItemUnit.setText(rs.getString("item_unit"));
              this.txtFieldPurchasePrice.setText(Integer.toString(rs.getInt("purchase_price")));
              this.txtFieldSellingPrice.setText(Integer.toString(rs.getInt("selling_price")));
              this.txtAreanotes.setText(rs.getString("notes"));
          }
        }catch(Exception ex){
            System.out.println("Failed to get DBConn:: "+ex.getMessage());
            NoConnection no = new NoConnection();
            RakibsTraders.popUp(no);
        }
    }//GEN-LAST:event_txtFieldPcsPerBoxFocusGained

    private void txtFieldModelFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFieldModelFocusGained
        // TODO add your handling code here:
        if(this.txtFieldProductID.getText().equals("")){
            String companyName = this.txtFieldCompanyName.getText();
            initComboModel(companyName);
        }
    }//GEN-LAST:event_txtFieldModelFocusGained

    private void txtFieldDimensionFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFieldDimensionFocusGained
        // TODO add your handling code here:
        if(this.txtFieldProductID.getText().equals("")){
            String companyName = this.txtFieldCompanyName.getText();
            String model = this.txtFieldModel.getText();
            initComboDimension(companyName,model);
        }
    }//GEN-LAST:event_txtFieldDimensionFocusGained

    private void txtFieldProductIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFieldProductIDActionPerformed
        // TODO add your handling code here:
       
    }//GEN-LAST:event_txtFieldProductIDActionPerformed

    private void txtFieldCompanyNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFieldCompanyNameFocusGained
        // TODO add your handling code here:
       if(this.txtFieldProductID.getText().equals(""))
           initComboCompanyName();
       else{
            Connection con = DBConnectionProvider.getDBConnection();
            String query = "SELECT * FROM products WHERE products_id = ?";
            try{
                PreparedStatement pstmt = con.prepareStatement(query);
                String productID = this.txtFieldProductID.getText();
                pstmt.setString(1,productID);
                ResultSet rs = pstmt.executeQuery();
                while(rs.next()){
                  this.txtFieldCompanyName.setText(rs.getString("company_name"));
                  this.txtFieldModel.setText(rs.getString("model"));
                  this.txtFieldDimension.setText(rs.getString("dimension"));
                  this.txtFieldPcsPerBox.setText(Integer.toString(rs.getInt("pcs_per_box")));
                  this.txtFieldItemUnit.setText(rs.getString("item_unit"));
                  this.txtFieldPurchasePrice.setText(Integer.toString(rs.getInt("purchase_price")));
                  this.txtFieldSellingPrice.setText(Integer.toString(rs.getInt("selling_price")));
                  this.txtAreanotes.setText(rs.getString("notes"));
              }
            }catch(Exception ex){
                System.out.println("Failed to get DBConn:: "+ex.getMessage());
                NoConnection no = new NoConnection();
                RakibsTraders.popUp(no);
            }
       }
        
    }//GEN-LAST:event_txtFieldCompanyNameFocusGained

    private void btnSellActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSellActionPerformed
        // TODO add your handling code here:
        Sell page = Sell.getRef();
        page.setFlagTime();
        page.setTime();
        this.setFlagTime();
        RakibsTraders.changeFrame(this, page);
    }//GEN-LAST:event_btnSellActionPerformed

    private void btnViewStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewStockActionPerformed
        // TODO add your handling code here:
        ViewStock page = new ViewStock();
        page.setCaller(this);
        RakibsTraders.bigPopUp(page);
        this.setEnabled(false);
        
    }//GEN-LAST:event_btnViewStockActionPerformed

    private void btnBuyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuyActionPerformed
        // TODO add your handling code here:
        Buy page = Buy.getRef();
        page.setFlagTime();
        page.setTime();
        this.setFlagTime();
        RakibsTraders.changeFrame(this, page);
    }//GEN-LAST:event_btnBuyActionPerformed

    private void btnStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStockActionPerformed
        // TODO add your handling code here:
        Stock page = Stock.getRef();
        page.setFlagTime();
        page.setTime();
        this.setFlagTime();
        RakibsTraders.changeFrame(this, page);
    }//GEN-LAST:event_btnStockActionPerformed

    private void btnExpensesMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnExpensesMouseEntered
        // Green:
        btnExpenses.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/Expenses_G.png")));
    }//GEN-LAST:event_btnExpensesMouseEntered

    private void btnExpensesMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnExpensesMouseExited
        // White:
        btnExpenses.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/Expenses.png")));
    }//GEN-LAST:event_btnExpensesMouseExited

    private void btnExpensesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExpensesActionPerformed
        // TODO add your handling code here:
        Expenses page = Expenses.getRef();
        page.setFlagTime();
        page.setTime();
        this.setFlagTime();
        RakibsTraders.changeFrame(this, page);
    }//GEN-LAST:event_btnExpensesActionPerformed

    private void btnProductsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProductsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnProductsActionPerformed

    private void btnReportsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReportsActionPerformed
        // TODO add your handling code here:
        Reports page = Reports.getRef();
        page.setFlagTime();
        page.setTime();
        this.setFlagTime();
        RakibsTraders.changeFrame(this, page);
    }//GEN-LAST:event_btnReportsActionPerformed

    private void txtFieldItemUnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFieldItemUnitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFieldItemUnitActionPerformed

    private void txtFieldItemUnitFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFieldItemUnitFocusGained
        // TODO add your handling code here:
        if(txtFieldProductID.getText().equals(""))
            initComboItemUnit();
    }//GEN-LAST:event_txtFieldItemUnitFocusGained

    private void txtFieldItemUnitFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFieldItemUnitFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFieldItemUnitFocusLost

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Products.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Products.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Products.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Products.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Products().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Background;
    private javax.swing.JButton btnBuy;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnExpenses;
    private javax.swing.JButton btnProducts;
    private javax.swing.JButton btnRefrash;
    private javax.swing.JButton btnReports;
    private javax.swing.JButton btnReturnProducts;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSell;
    private javax.swing.JButton btnSettings;
    private javax.swing.JButton btnStock;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnViewProduct;
    private javax.swing.JButton btnViewStock;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAdmin;
    private javax.swing.JLabel lblCompanyName;
    private javax.swing.JLabel lblDimension;
    private javax.swing.JLabel lblHome;
    private javax.swing.JLabel lblItemUnit;
    private javax.swing.JLabel lblModel;
    private javax.swing.JLabel lblNotes;
    private javax.swing.JLabel lblPageTitle;
    private javax.swing.JLabel lblPcs;
    private javax.swing.JLabel lblProductID;
    private javax.swing.JLabel lblPurchaseprice;
    private javax.swing.JLabel lblSellingPrice;
    private javax.swing.JLabel lblTime;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextArea txtAreanotes;
    private javax.swing.JTextField txtFieldCompanyName;
    private javax.swing.JTextField txtFieldDimension;
    private javax.swing.JTextField txtFieldItemUnit;
    private javax.swing.JTextField txtFieldModel;
    private javax.swing.JTextField txtFieldPcsPerBox;
    private javax.swing.JTextField txtFieldProductID;
    private javax.swing.JTextField txtFieldPurchasePrice;
    private javax.swing.JTextField txtFieldSellingPrice;
    // End of variables declaration//GEN-END:variables

    //custome variables declaration
    private ArrayList<String> productID = new ArrayList<>();
    private ArrayList<String> companyName = new ArrayList<>();
    private ArrayList<String> model = new ArrayList<>();
    private ArrayList<String> dimension = new ArrayList<>();
    private ArrayList<String> itemUnit = new ArrayList<>();
    private static Products ref;
    private Integer flagTime = 0;
    //end custom varibles
    
    public static Products getRef(){
        if(ref==null)
            ref = new Products();
        return ref;
    }
    
    private void clearField() {
         this.txtFieldProductID.setText("");
         this.txtFieldCompanyName.setText("");
         this.txtFieldDimension.setText("");
         this.txtFieldModel.setText("");
         this.txtFieldItemUnit.setText("");
         this.txtFieldPcsPerBox.setText("");
         this.txtFieldPurchasePrice.setText("");
         this.txtFieldSellingPrice.setText("");
         this.txtAreanotes.setText("");
         initComboProductID();
    }
    
    private void setIcon(){
        this.setIconImage(new ImageIcon(getClass().getResource("/Resources/Icons/Icon.png")).getImage());
    }
    
    public void setFlagTime(){
        if(flagTime==0)
            flagTime=1;
        else
            flagTime=0;
    }
     
     public void setTime(){
        new Thread(){
            public void run(){
                if(flagTime==1){
                    SimpleDateFormat dFormat = new SimpleDateFormat("dd/MM/yyyy");
                    Date d = new Date();
                    String date = dFormat.format(d);
                    int sec;
                    int hour;
                    int min;
                    int am_pm;
                    while(flagTime==1/* && new GregorianCalendar().get(Calendar.SECOND)!=fsec*/){
                        Calendar cal = new GregorianCalendar();
                        sec = cal.get(Calendar.SECOND);
                        //System.out.println(sec);
                        hour = cal.get(Calendar.HOUR);
                        if(hour==0)
                            hour=12;
                        min = cal.get(Calendar.MINUTE);
                        am_pm = cal.get(Calendar.AM_PM);
                        if(am_pm == 0){
                            String time = "Time: " + hour + " : " + min + " : " + sec + " " + "AM" + " Date: " + date;
                            lblTime.setText(time);
                        }else {
                            String time = "Time: " + hour + " : " + min + " : " + sec + " " + "PM" + " Date: " + date;
                            lblTime.setText(time);
                               }
                        try {
                            sleep(1000);
                        } catch (InterruptedException ex) {
                                Logger.getLogger(Sell.class.getName()).log(Level.SEVERE, null, ex);
                        }
                            
                    }    
                }
            }
        }.start();
    }
    
    private void initComboProductID(){
        productID = Functions.productID();
        Functions.setupAutoComplete(txtFieldProductID, productID); 
    }
    
    private void initComboCompanyName(){
        companyName = Functions.companyName();
        Functions.setupAutoComplete(txtFieldCompanyName, companyName); 
    }
    
    private void initComboModel(String companyName){
        model = Functions.model(companyName);
        Functions.setupAutoComplete(txtFieldModel, model);
    }
    
    private void initComboDimension(String companyName, String model){
        dimension = Functions.dimension(companyName, model);
        Functions.setupAutoComplete(txtFieldDimension, dimension);
    }
    
    
    private void initComboItemUnit(){
        itemUnit.add("Box");
        itemUnit.add("Pcs");
        itemUnit.add("KG");
        Functions.setupAutoComplete(txtFieldItemUnit, itemUnit);
    }
    
    private boolean checkField(){
        if(this.txtFieldCompanyName.getText().equals("") || this.txtFieldModel.getText().equals("") || this.txtFieldDimension.getText().equals("") || this.txtFieldPcsPerBox.getText().equals("") || this.txtFieldItemUnit.getText().equals("") || this.txtFieldPurchasePrice.getText().equals("") || this.txtFieldSellingPrice.getText().equals(""))
            return true;
        else return false;
    }
    
    @Override
    public void processWindowEvent(WindowEvent e) {
        if (e.getID() == WindowEvent.WINDOW_CLOSING) {
            Functions.logoutLog();
            //dispose();
            RakibsTraders.close();
        }
    }
}
