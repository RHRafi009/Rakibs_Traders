package UI.PopUp;

import Database.DBConnectionProvider;
import Others.Functions;
import UI.BigPopUp.Bills;
import UI.BigPopUp.EmployeeList;
import UI.BigPopUp.Invoice;
import UI.BigPopUp.VendorList;
import UI.LoginPage;
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import static jdk.nashorn.internal.objects.NativeString.trim;
import rakibs.traders.RakibsTraders;

/**
 *
 * @author RH Rafi
 */
public class EmployeeSalary extends javax.swing.JFrame {

    /**
     * Creates new form Delete
     */
    public EmployeeSalary() {
        initComponents();
        setIcon();
        setData();
        isOkBtnPrsd = false;
        
    }
    
    
    private void clearField() {
         
         this.txtFieldDateValue.setText("");
         this.jLabel2.setText("");
         this.lblEmployeeName.setText("#Employee Name");
         this.txtFieldEmployeeID.setText("");
//         this.txtFieldExpenseCategoryOptional.setText("");
         this.txtFieldAmountValue.setText("");
         this.jLabelExpenseID.setText("");
         this.txtFieldDateValue.setText("");
         this.jLabelWorkdaysValue.setText("");
         this.jLabelPrasentvalue.setText("");
         this.jLabelLateValue.setText("");
         this.jLabelAbsentValue.setText("");
         this.jLabelLeaveValue.setText("");
         this.jLabelOthersValue.setText("");
         this.jTextFieldLate.setText("");
//         initComboProductID();
        
    }
     private boolean checkPassword(){
        char[] passArray = userPassF.getPassword();
        String pass = String.valueOf(passArray);

        if( pass.equals("admin") || pass.equals(LoginPage.getRef().userPass())){
            return true;
        }
        jLabelWrong.setVisible(true);    
        return false; 
    }
     
      private boolean checkField(){
        if(this.txtFieldEmployeeID.getText().equals("") || this.txtFieldAmountValue.getText().equals("") ){
//            System.err.println(this.txtFieldAmountValue.getText() + " EROR ");
            return true;
        }
        else return false;
    }
      
    public void setData(){
        salary = 0.0;
        SimpleDateFormat dFormat = new SimpleDateFormat("dd/MM/yyyy");
        Date d = new Date();
        String date = dFormat.format(d);
        
        if(txtFieldDateValue.getText().equals("")){
            Calendar cal = new GregorianCalendar();
            Integer sec = cal.get(Calendar.SECOND);
            Integer hour = cal.get(Calendar.HOUR);
            if(hour==0)
                hour=12;
            Integer min = cal.get(Calendar.MINUTE);
            Integer am_pm = cal.get(Calendar.AM_PM);
            if(am_pm == 0){
                String timeAndDate = hour + ":" + min + ":" + sec + " " + "AM" + " " + date;
                txtFieldDateValue.setText(timeAndDate);
            }else {
                String timeAndDate = hour + ":" + min + ":" + sec + " " + "PM" + " " + date;
                txtFieldDateValue.setText(timeAndDate);
            }
        }
        String id = Functions.expIDGenerator(date);
        jLabelExpenseID.setText(id);
    }
      
    private boolean isOkBtnPrsd = false;
    public void okPressed(){
        isOkBtnPrsd = true;
    }
   
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonAddPayment1 = new javax.swing.JButton();
        jButtonDeletePayment = new javax.swing.JButton();
        lblExpenseID = new javax.swing.JLabel();
        lblEmployeeName = new javax.swing.JLabel();
        txtFieldEmployeeID = new javax.swing.JTextField();
        jComboBoxPaymentReason = new javax.swing.JComboBox<>();
        lblPaymentType = new javax.swing.JLabel();
        lblAccount = new javax.swing.JLabel();
        txtFieldAmountValue = new javax.swing.JTextField();
        lblAccount1 = new javax.swing.JLabel();
        jButtonOK = new javax.swing.JButton();
        jButtonAddPayment = new javax.swing.JButton();
        userPassF = new javax.swing.JPasswordField();
        jLabelWrong = new javax.swing.JLabel();
        lblTimeanddate5 = new javax.swing.JLabel();
        txtFieldDateValue = new javax.swing.JTextField();
        lblDate = new javax.swing.JLabel();
        lblExpenseHistory2 = new javax.swing.JLabel();
        jLabelExpenseID = new javax.swing.JLabel();
        lblExpenseCategory1 = new javax.swing.JLabel();
        lblExpenseCategory2 = new javax.swing.JLabel();
        jComboBoxPaymentMethodValue1 = new javax.swing.JComboBox<>();
        lblExpenseID1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lblExpenseHistory3 = new javax.swing.JLabel();
        lblExpenseID2 = new javax.swing.JLabel();
        jLabelTotalPaid = new javax.swing.JLabel();
        jButtonSubmit = new javax.swing.JButton();
        jButtonRefresh = new javax.swing.JButton();
        jMonthChooser = new com.toedter.calendar.JMonthChooser();
        jYearChooser = new com.toedter.calendar.JYearChooser();
        jButtonCalulateSalary = new javax.swing.JButton();
        jLabelWorkdays = new javax.swing.JLabel();
        jLabelWorkdaysValue = new javax.swing.JLabel();
        jLabelPresent = new javax.swing.JLabel();
        jLabelPrasentvalue = new javax.swing.JLabel();
        jLabelLateValue = new javax.swing.JLabel();
        jLabelLate = new javax.swing.JLabel();
        jLabelAbsent = new javax.swing.JLabel();
        jLabelAbsentValue = new javax.swing.JLabel();
        jLabelLeaveValue = new javax.swing.JLabel();
        jLabelLeave = new javax.swing.JLabel();
        jLabelOthers = new javax.swing.JLabel();
        jLabelOthersValue = new javax.swing.JLabel();
        jTextFieldLate = new javax.swing.JTextField();
        jLabeExpenseID = new javax.swing.JLabel();

        jButtonAddPayment1.setBackground(new java.awt.Color(67, 196, 114));
        jButtonAddPayment1.setFont(new java.awt.Font("Titillium Web", 1, 12)); // NOI18N
        jButtonAddPayment1.setForeground(new java.awt.Color(255, 255, 255));
        jButtonAddPayment1.setText("UPDATE");
        jButtonAddPayment1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddPayment1ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMinimumSize(new java.awt.Dimension(1200, 650));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButtonDeletePayment.setBackground(new java.awt.Color(255, 0, 0));
        jButtonDeletePayment.setFont(new java.awt.Font("Titillium Web", 1, 12)); // NOI18N
        jButtonDeletePayment.setForeground(new java.awt.Color(255, 255, 255));
        jButtonDeletePayment.setText("DELETE");
        jButtonDeletePayment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeletePaymentActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonDeletePayment, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 480, 150, 30));

        lblExpenseID.setFont(new java.awt.Font("Titillium Web", 1, 16)); // NOI18N
        lblExpenseID.setForeground(new java.awt.Color(255, 255, 255));
        lblExpenseID.setText("Expense ID:");
        getContentPane().add(lblExpenseID, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 80, 110, 23));

        lblEmployeeName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblEmployeeName.setForeground(new java.awt.Color(255, 255, 255));
        lblEmployeeName.setText("#Employee Name");
        getContentPane().add(lblEmployeeName, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 200, 320, 23));

        txtFieldEmployeeID.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtFieldEmployeeIDFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFieldEmployeeIDFocusLost(evt);
            }
        });
        txtFieldEmployeeID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFieldEmployeeIDActionPerformed(evt);
            }
        });
        getContentPane().add(txtFieldEmployeeID, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 153, 250, 30));

        jComboBoxPaymentReason.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Salary", "Lend", "Overtime", "Others" }));
        getContentPane().add(jComboBoxPaymentReason, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 270, 370, -1));

        lblPaymentType.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblPaymentType.setForeground(new java.awt.Color(255, 255, 255));
        lblPaymentType.setText("Payment Type:");
        getContentPane().add(lblPaymentType, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 240, 103, 23));

        lblAccount.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblAccount.setForeground(new java.awt.Color(255, 255, 255));
        lblAccount.setText("Payment Reason:");
        getContentPane().add(lblAccount, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 270, 140, 23));

        txtFieldAmountValue.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        txtFieldAmountValue.setForeground(new java.awt.Color(255, 102, 0));
        txtFieldAmountValue.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtFieldAmountValueFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFieldAmountValueFocusLost(evt);
            }
        });
        txtFieldAmountValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFieldAmountValueActionPerformed(evt);
            }
        });
        getContentPane().add(txtFieldAmountValue, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 410, 370, 40));

        lblAccount1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblAccount1.setForeground(new java.awt.Color(255, 102, 0));
        lblAccount1.setText("Amount:");
        getContentPane().add(lblAccount1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 410, 103, 40));

        jButtonOK.setBackground(new java.awt.Color(0, 51, 153));
        jButtonOK.setForeground(new java.awt.Color(255, 255, 255));
        jButtonOK.setText("OK");
        jButtonOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOKActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonOK, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 153, 70, 30));

        jButtonAddPayment.setBackground(new java.awt.Color(67, 196, 114));
        jButtonAddPayment.setFont(new java.awt.Font("Titillium Web", 1, 12)); // NOI18N
        jButtonAddPayment.setForeground(new java.awt.Color(255, 255, 255));
        jButtonAddPayment.setText("ADD PAYMENT");
        jButtonAddPayment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddPaymentActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonAddPayment, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 520, 150, 30));

        userPassF.setFont(new java.awt.Font("Titillium", 0, 14)); // NOI18N
        userPassF.setToolTipText("Password");
        userPassF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                userPassFFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                userPassFFocusLost(evt);
            }
        });
        userPassF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userPassFActionPerformed(evt);
            }
        });
        userPassF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                userPassFKeyPressed(evt);
            }
        });
        getContentPane().add(userPassF, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 470, 190, 30));

        jLabelWrong.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/cross-mark.png"))); // NOI18N
        getContentPane().add(jLabelWrong, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 470, 30, 30));
        jLabelWrong.setVisible(false);

        lblTimeanddate5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblTimeanddate5.setForeground(new java.awt.Color(255, 255, 255));
        lblTimeanddate5.setText("Enter Password");
        getContentPane().add(lblTimeanddate5, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 470, 103, 23));

        txtFieldDateValue.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtFieldDateValueFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFieldDateValueFocusLost(evt);
            }
        });
        txtFieldDateValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFieldDateValueActionPerformed(evt);
            }
        });
        getContentPane().add(txtFieldDateValue, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 110, 170, 23));

        lblDate.setFont(new java.awt.Font("Titillium Web", 1, 16)); // NOI18N
        lblDate.setForeground(new java.awt.Color(255, 255, 255));
        lblDate.setText("Date:");
        getContentPane().add(lblDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 110, 110, 23));

        lblExpenseHistory2.setFont(new java.awt.Font("Titillium", 0, 22)); // NOI18N
        lblExpenseHistory2.setForeground(new java.awt.Color(67, 196, 114));
        lblExpenseHistory2.setText("Employee Payment History");
        getContentPane().add(lblExpenseHistory2, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 90, 304, 43));

        jLabelExpenseID.setFont(new java.awt.Font("Titillium", 0, 18)); // NOI18N
        jLabelExpenseID.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(jLabelExpenseID, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 80, 210, 30));

        lblExpenseCategory1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblExpenseCategory1.setForeground(new java.awt.Color(255, 255, 255));
        lblExpenseCategory1.setText("Employee ID");
        getContentPane().add(lblExpenseCategory1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 160, 130, 23));

        lblExpenseCategory2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblExpenseCategory2.setForeground(new java.awt.Color(255, 255, 255));
        lblExpenseCategory2.setText("Employee Name");
        getContentPane().add(lblExpenseCategory2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 200, 130, 23));

        jComboBoxPaymentMethodValue1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cash", "Cheque", "Bank", "Others" }));
        getContentPane().add(jComboBoxPaymentMethodValue1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 240, 370, -1));

        lblExpenseID1.setFont(new java.awt.Font("Titillium Web", 1, 16)); // NOI18N
        lblExpenseID1.setForeground(new java.awt.Color(255, 255, 255));
        lblExpenseID1.setText("Reciept ID:");
        getContentPane().add(lblExpenseID1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 110, 110, 23));

        jLabel2.setFont(new java.awt.Font("Titillium", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("#ID");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 110, 210, 30));
        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 150, 460, 310));

        lblExpenseHistory3.setFont(new java.awt.Font("Titillium", 0, 22)); // NOI18N
        lblExpenseHistory3.setForeground(new java.awt.Color(67, 196, 114));
        lblExpenseHistory3.setText("Employee Salary");
        getContentPane().add(lblExpenseHistory3, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 30, 304, 43));

        lblExpenseID2.setFont(new java.awt.Font("Titillium Web", 1, 16)); // NOI18N
        lblExpenseID2.setForeground(new java.awt.Color(255, 255, 255));
        lblExpenseID2.setText("Total Paid: ");
        getContentPane().add(lblExpenseID2, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 480, 110, 23));

        jLabelTotalPaid.setFont(new java.awt.Font("Titillium", 0, 18)); // NOI18N
        jLabelTotalPaid.setForeground(new java.awt.Color(255, 255, 255));
        jLabelTotalPaid.setText("0.0000");
        getContentPane().add(jLabelTotalPaid, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 480, 140, 30));

        jButtonSubmit.setBackground(new java.awt.Color(67, 196, 114));
        jButtonSubmit.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButtonSubmit.setForeground(new java.awt.Color(255, 255, 255));
        jButtonSubmit.setText("EMPLOYEES");
        jButtonSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSubmitActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonSubmit, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 30, 110, 30));

        jButtonRefresh.setBackground(new java.awt.Color(0, 0, 153));
        jButtonRefresh.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButtonRefresh.setForeground(new java.awt.Color(255, 255, 255));
        jButtonRefresh.setText("REFRESH");
        jButtonRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRefreshActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonRefresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 30, 120, 30));
        getContentPane().add(jMonthChooser, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 310, 100, 30));
        getContentPane().add(jYearChooser, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 310, 70, 30));

        jButtonCalulateSalary.setBackground(new java.awt.Color(0, 204, 51));
        jButtonCalulateSalary.setForeground(new java.awt.Color(255, 255, 255));
        jButtonCalulateSalary.setText("CAlCULATE SALARY");
        jButtonCalulateSalary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCalulateSalaryActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonCalulateSalary, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 310, 170, 30));

        jLabelWorkdays.setForeground(new java.awt.Color(255, 255, 255));
        jLabelWorkdays.setText("Workdays: ");
        getContentPane().add(jLabelWorkdays, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 350, -1, 20));

        jLabelWorkdaysValue.setForeground(new java.awt.Color(255, 255, 255));
        jLabelWorkdaysValue.setText("00");
        getContentPane().add(jLabelWorkdaysValue, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 350, 40, 20));

        jLabelPresent.setForeground(new java.awt.Color(255, 255, 255));
        jLabelPresent.setText("Present:");
        getContentPane().add(jLabelPresent, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 350, -1, 20));

        jLabelPrasentvalue.setForeground(new java.awt.Color(255, 255, 255));
        jLabelPrasentvalue.setText("00");
        getContentPane().add(jLabelPrasentvalue, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 350, 40, 20));

        jLabelLateValue.setForeground(new java.awt.Color(255, 255, 255));
        jLabelLateValue.setText("00");
        getContentPane().add(jLabelLateValue, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 350, 40, 20));

        jLabelLate.setForeground(new java.awt.Color(255, 255, 255));
        jLabelLate.setText("Late:");
        getContentPane().add(jLabelLate, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 350, -1, 20));

        jLabelAbsent.setForeground(new java.awt.Color(255, 255, 255));
        jLabelAbsent.setText("Absent:");
        getContentPane().add(jLabelAbsent, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 380, -1, 20));

        jLabelAbsentValue.setForeground(new java.awt.Color(255, 255, 255));
        jLabelAbsentValue.setText("00");
        getContentPane().add(jLabelAbsentValue, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 380, 40, 20));

        jLabelLeaveValue.setForeground(new java.awt.Color(255, 255, 255));
        jLabelLeaveValue.setText("00");
        getContentPane().add(jLabelLeaveValue, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 380, 40, 20));

        jLabelLeave.setForeground(new java.awt.Color(255, 255, 255));
        jLabelLeave.setText("Leave:");
        getContentPane().add(jLabelLeave, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 380, -1, 20));

        jLabelOthers.setForeground(new java.awt.Color(255, 255, 255));
        jLabelOthers.setText("Others:");
        getContentPane().add(jLabelOthers, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 380, -1, 20));

        jLabelOthersValue.setForeground(new java.awt.Color(255, 255, 255));
        jLabelOthersValue.setText("00");
        getContentPane().add(jLabelOthersValue, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 380, 40, 20));

        jTextFieldLate.setText("0");
        jTextFieldLate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldLateActionPerformed(evt);
            }
        });
        getContentPane().add(jTextFieldLate, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 350, 50, -1));

        jLabeExpenseID.setForeground(new java.awt.Color(255, 255, 255));
        jLabeExpenseID.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/background.png"))); // NOI18N
        getContentPane().add(jLabeExpenseID, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1200, 650));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    
    private void jButtonDeletePaymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeletePaymentActionPerformed
        // TODO add your handling code here:
        if( isOkBtnPrsd ){
            DeleteEmployeePayment page = new DeleteEmployeePayment();
            RakibsTraders.popUp(page);
            
            
        }
        else{
            PutIDFirst page = new PutIDFirst();
            RakibsTraders.popUp(page);
        }
                
        
    }//GEN-LAST:event_jButtonDeletePaymentActionPerformed

    private void txtFieldEmployeeIDFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFieldEmployeeIDFocusGained
        // TODO add your handling code here:
       
    }//GEN-LAST:event_txtFieldEmployeeIDFocusGained

    private void txtFieldEmployeeIDFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFieldEmployeeIDFocusLost

    }//GEN-LAST:event_txtFieldEmployeeIDFocusLost

    private void txtFieldEmployeeIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFieldEmployeeIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFieldEmployeeIDActionPerformed

    private void txtFieldAmountValueFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFieldAmountValueFocusGained
        // TODO add your handling code here:

    }//GEN-LAST:event_txtFieldAmountValueFocusGained

    private void txtFieldAmountValueFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFieldAmountValueFocusLost
        // TODO add your handling code here:

    }//GEN-LAST:event_txtFieldAmountValueFocusLost

    private void txtFieldAmountValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFieldAmountValueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFieldAmountValueActionPerformed
    private JTable payment = new JTable();
    DefaultTableModel paymentData = new DefaultTableModel(new String[]{"EXP_ID", "Date" , "Time", "Reciept ID","Payment type", "Reason", "Amount"}, 0);
  
    Double salary = 0.0;
    public void refreshPaymentTable( String EmpID ){
            paymentData.getDataVector().removeAllElements();
            payment.setModel(paymentData);
        
            Connection con = DBConnectionProvider.getDBConnection();
            String query2 = "select * from employee_salary where emp_ID = ?";
            PreparedStatement pstmt;
            try {
                Double totalPaidAmt = 0.0;
                pstmt = con.prepareStatement(query2);
                pstmt.setString(1, EmpID);
                ResultSet rs = pstmt.executeQuery();

                while( rs.next() ){
                    String col1 = rs.getString("exp_ID");
                    String col2 = rs.getString("date");
                    String col3 = rs.getString("time");
                    Integer col4= rs.getInt("reciept_ID");
                    String col6 = rs.getString("payment_reason");
//                    String col7= rs.getString("amount");
                    Double col7 = rs.getDouble("amount");
                    String col5= rs.getString("payment_method");
                    totalPaidAmt += rs.getDouble("amount");
                    paymentData.addRow(new Object[]{ col1, col2, col3, col4, col5, col6,col7});
                }
                payment.setModel(paymentData);
                jScrollPane1.getViewport().add(payment);
                rs.close();
                jLabelTotalPaid.setText( String.format("%.4f",totalPaidAmt) );
                jLabel2.setText((payment.getRowCount()+1) + "");

                if( jComboBoxPaymentReason.getSelectedItem().equals("Salary") ){
                    txtFieldAmountValue.setText(String.format("%.4f",salary));
                }
                
            } catch (SQLException ex) {
                Logger.getLogger(EmployeeSalary.class.getName()).log(Level.SEVERE, null, ex);
            }
           
    
    }
    
    
    private void jButtonOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOKActionPerformed
        // TODO add your handling code here:
        String EmpID = txtFieldEmployeeID.getText();
        
        if( EmpID.startsWith("EMP#") ){
            okPressed();
            Connection con = DBConnectionProvider.getDBConnection();
            String query = "select * from employee where emp_ID = ?";
            
            try {
                PreparedStatement pstmt = con.prepareStatement(query);
                pstmt.setString(1, EmpID);
                ResultSet rs = pstmt.executeQuery();
                
                
                while( rs.next() ){
                    this.lblEmployeeName.setText(rs.getString("employee_name") );
                    this.salary = rs.getDouble("Salary");
                    this.salarry = rs.getDouble("Salary");
                   
                }
                refreshPaymentTable(EmpID);
               
                
            } catch (SQLException ex) {
                Logger.getLogger(EmployeeSalary.class.getName()).log(Level.SEVERE, null, ex);
                NoConnection page = new NoConnection();
                RakibsTraders.popUp(page);
            }
        }
        
        
    }//GEN-LAST:event_jButtonOKActionPerformed

    private void jButtonAddPayment1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddPayment1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonAddPayment1ActionPerformed
    
    public void SaveToExp( String ExpID, String EmpID, String date, String time, String PaymentType, String PaymentReason, Double amount ){
        Connection con = DBConnectionProvider.getDBConnection();
        String query = "INSERT INTO `expenses` (`exp_ID`, `date`, `time`, `category`, `optional_category`, `amount`, `payment_type`, `account`, `notes`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)";
       

        try{
            PreparedStatement pstmt = con.prepareStatement(query);
            pstmt.setString(1, ExpID);
            pstmt.setString(2, date);
            pstmt.setString(3, time);
            pstmt.setString(4, "Salary");
            pstmt.setString(5, EmpID);
            pstmt.setDouble(6, amount);
            pstmt.setString(7, PaymentType);
            pstmt.setString(8, "NONE");
            pstmt.setString(9, PaymentReason);

            if(jLabelExpenseID.getText().equals("0"))
            throw new Exception("Expense ID null");
            else{
                pstmt.executeUpdate();
//                Save sv = new Save();
//                RakibsTraders.popUp(sv);
//                clearField();
            }
        } catch(Exception ex){
            System.out.println("Failed to get DBConn:: "+ex.getMessage());
            NoConnection no = new NoConnection();
            RakibsTraders.popUp(no);
        }
    
    
    }
   
    
   
    private void jButtonAddPaymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddPaymentActionPerformed
        // TODO add your handling code here:
        if( checkPassword() && !checkField() ){
                Connection con = DBConnectionProvider.getDBConnection();
                String query3 = "INSERT INTO `employee_salary` ( `date`,`time`, reciept_ID, `exp_ID`, `emp_ID`, `payment_method`, `payment_reason`, `amount`) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?)";
                String dateAndTime = txtFieldDateValue.getText();
                String time = dateAndTime.substring(0,dateAndTime.indexOf(" ")+3);
                String date = dateAndTime.substring(dateAndTime.indexOf(" ") + 4);

              try{
                PreparedStatement pstmt = con.prepareStatement(query3);
                String exp_ID = jLabelExpenseID.getText();
                String emp_ID = this.txtFieldEmployeeID.getText();
                Double amount = Double.parseDouble(this.txtFieldAmountValue.getText());
                String paymentReason = (String) this.jComboBoxPaymentReason.getSelectedItem();
                String paymentType = (String) this.jComboBoxPaymentMethodValue1.getSelectedItem();
                String[] splitDate = date.split("/");
                date = trim(splitDate[2]) + "-" + trim(splitDate[1]) + "-" + trim(splitDate[0]);
                pstmt.setString(1,date);
                pstmt.setString(2,time);
                pstmt.setString(3,jLabel2.getText());
                pstmt.setString(4,exp_ID);
                pstmt.setString(5,emp_ID);
                pstmt.setString(6,paymentType);
                pstmt.setString(7,paymentReason);
                pstmt.setDouble(8,amount);
//                pstmt.setString(9,exp_ID);
                pstmt.executeUpdate();
                refreshPaymentTable(emp_ID);
                SaveToExp(exp_ID,emp_ID,date,time,paymentType,paymentReason,amount);
                
                Updated up = new Updated();
                userPassF.setText("");
                RakibsTraders.popUp(up);
                clearField();
                refreshPaymentTable(emp_ID);
                setData();
                //Clearing the jscroll pane
                paymentData.getDataVector().removeAllElements();
                payment.setModel(paymentData);
                this.jLabel2.setText("#ID");
                txtFieldAmountValue.setText("");
                jLabelTotalPaid.setText("0.0000 ");
            }catch(Exception ex){
                Logger.getLogger(EmployeeSalary.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else{
            checkPassword page = new checkPassword();
            RakibsTraders.popUp(page);
        }
        
        
    }//GEN-LAST:event_jButtonAddPaymentActionPerformed

    private void userPassFFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_userPassFFocusGained
        userPassF.setText("");
        //        userPassF.setForeground(Color.black);
        //        lblPassInvalid.setVisible(false);
        jLabelWrong.setVisible(false);
    }//GEN-LAST:event_userPassFFocusGained

    private void userPassFFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_userPassFFocusLost
        //        userPassF.setForeground(Color.GRAY);
    }//GEN-LAST:event_userPassFFocusLost

    private void userPassFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userPassFActionPerformed
        // TODO add your handling code here:
        //        btnGoActionPerformed(evt);
    }//GEN-LAST:event_userPassFActionPerformed

    private void userPassFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_userPassFKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_userPassFKeyPressed

    private void txtFieldDateValueFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFieldDateValueFocusGained
        // TODO add your handling code here:

    }//GEN-LAST:event_txtFieldDateValueFocusGained

    private void txtFieldDateValueFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFieldDateValueFocusLost
        // TODO add your handling code here:

    }//GEN-LAST:event_txtFieldDateValueFocusLost

    private void txtFieldDateValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFieldDateValueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFieldDateValueActionPerformed

    private void jButtonSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSubmitActionPerformed
        // TODO add your handling code here:
        EmployeeList page = new EmployeeList();
        page.setCaller(this);
        RakibsTraders.bigPopUp(page);
        this.setEnabled(false);
    }//GEN-LAST:event_jButtonSubmitActionPerformed

    private void jButtonRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRefreshActionPerformed
        // TODO add your handling code here:
        paymentData.getDataVector().removeAllElements();
        payment.setModel(paymentData);
        jScrollPane1.getViewport().add(payment);
        refreshPaymentTable(txtFieldEmployeeID.getText());
//        clearField();
    }//GEN-LAST:event_jButtonRefreshActionPerformed

    private void jButtonCalulateSalaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCalulateSalaryActionPerformed
        // TODO add your handling code here:
//        jMonthChooser.getMonth();
//        jYearChooser.getYear();
        //System.out.println(jMonthChooser.getMonth() + " "+ jYearChooser.getYear());
        String query1 = "select count(distinct(Date)) as rowdate from emp_attendance where month(Date) = ? and year(Date) = ?";
        String query2 = "select count(Emp_ID) as rowpresent from emp_attendance where month(Date) = ? and year(Date) = ? and Emp_ID = ? and status = 'Present'";
        String query3 = "select count(Emp_ID) as rowlate from emp_attendance where month(Date) = ? and year(Date) = ? and Emp_ID = ? and status = 'Late'";
        String query4 = "select count(Emp_ID) as rowabsent from emp_attendance where month(Date) = ? and year(Date) = ? and Emp_ID = ? and status = 'Unpaid Leave'";
        String query5 = "select count(Emp_ID) as rowleave from emp_attendance where month(Date) = ? and year(Date) = ? and Emp_ID = ? and status = 'Sick' or status = 'Off Day' or status = 'Paid Leave'";
        String query6 = "select count(Emp_ID) as rowothers from emp_attendance where month(Date) = ? and year(Date) = ? and Emp_ID = ? and status = 'Others'";
        Connection con = DBConnectionProvider.getDBConnection();
        try{
            PreparedStatement pstmt1 = con.prepareStatement(query1);
            pstmt1.setInt(1, jMonthChooser.getMonth()+1);
            pstmt1.setInt(2, jYearChooser.getYear());
            ResultSet rs1 = pstmt1.executeQuery();
            while(rs1.next()){
                //System.out.println(rs1.getInt("rowdate"));
                jLabelWorkdaysValue.setText(""+rs1.getInt("rowdate"));
            }
            PreparedStatement pstmt2 = con.prepareStatement(query2);
            pstmt2.setInt(1, jMonthChooser.getMonth()+1);
            pstmt2.setInt(2, jYearChooser.getYear());
            pstmt2.setString(3, txtFieldEmployeeID.getText());
            ResultSet rs2 = pstmt2.executeQuery();
            while(rs2.next()){
                //System.out.println(rs2.getInt("rowpresent"));
                jLabelPrasentvalue.setText(""+rs2.getInt("rowpresent"));
            }
            PreparedStatement pstmt3 = con.prepareStatement(query3);
            pstmt3.setInt(1, jMonthChooser.getMonth()+1);
            pstmt3.setInt(2, jYearChooser.getYear());
            pstmt3.setString(3, txtFieldEmployeeID.getText());
            ResultSet rs3 = pstmt3.executeQuery();
            while(rs3.next()){
                //System.out.println(rs3.getInt("rowlate"));
                jLabelLateValue.setText(""+rs3.getInt("rowlate"));
            }
            PreparedStatement pstmt4 = con.prepareStatement(query4);
            pstmt4.setInt(1, jMonthChooser.getMonth()+1);
            pstmt4.setInt(2, jYearChooser.getYear());
            pstmt4.setString(3, txtFieldEmployeeID.getText());
            ResultSet rs4 = pstmt4.executeQuery();
            while(rs4.next()){
                //System.out.println(rs4.getInt("rowabsent"));
                jLabelAbsentValue.setText(""+rs4.getInt("rowabsent"));
            }
            PreparedStatement pstmt5 = con.prepareStatement(query5);
            pstmt5.setInt(1, jMonthChooser.getMonth()+1);
            pstmt5.setInt(2, jYearChooser.getYear());
            pstmt5.setString(3, txtFieldEmployeeID.getText());
            ResultSet rs5 = pstmt5.executeQuery();
            while(rs5.next()){
                //System.out.println(rs5.getInt("rowleave"));
                jLabelLeaveValue.setText(""+rs5.getInt("rowleave"));
            }
            PreparedStatement pstmt6 = con.prepareStatement(query6);
            pstmt6.setInt(1, jMonthChooser.getMonth()+1);
            pstmt6.setInt(2, jYearChooser.getYear());
            pstmt6.setString(3, txtFieldEmployeeID.getText());
            ResultSet rs6 = pstmt6.executeQuery();
            while(rs6.next()){
                //System.out.println(rs6.getInt("rowothers"));
                jLabelOthersValue.setText(""+rs6.getInt("rowothers"));
            }
            setSalary();
        }catch(Exception x){
            Logger.getLogger(EmployeeSalary.class.getName()).log(Level.SEVERE, null, x);
        }
    }//GEN-LAST:event_jButtonCalulateSalaryActionPerformed

    private void jTextFieldLateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldLateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldLateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
       
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EmployeeSalary().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAddPayment;
    private javax.swing.JButton jButtonAddPayment1;
    private javax.swing.JButton jButtonCalulateSalary;
    private javax.swing.JButton jButtonDeletePayment;
    private javax.swing.JButton jButtonOK;
    private javax.swing.JButton jButtonRefresh;
    private javax.swing.JButton jButtonSubmit;
    private javax.swing.JComboBox<String> jComboBoxPaymentMethodValue1;
    private javax.swing.JComboBox<String> jComboBoxPaymentReason;
    private javax.swing.JLabel jLabeExpenseID;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelAbsent;
    private javax.swing.JLabel jLabelAbsentValue;
    private javax.swing.JLabel jLabelExpenseID;
    private javax.swing.JLabel jLabelLate;
    private javax.swing.JLabel jLabelLateValue;
    private javax.swing.JLabel jLabelLeave;
    private javax.swing.JLabel jLabelLeaveValue;
    private javax.swing.JLabel jLabelOthers;
    private javax.swing.JLabel jLabelOthersValue;
    private javax.swing.JLabel jLabelPrasentvalue;
    private javax.swing.JLabel jLabelPresent;
    private javax.swing.JLabel jLabelTotalPaid;
    private javax.swing.JLabel jLabelWorkdays;
    private javax.swing.JLabel jLabelWorkdaysValue;
    private javax.swing.JLabel jLabelWrong;
    private com.toedter.calendar.JMonthChooser jMonthChooser;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextFieldLate;
    private com.toedter.calendar.JYearChooser jYearChooser;
    private javax.swing.JLabel lblAccount;
    private javax.swing.JLabel lblAccount1;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblEmployeeName;
    private javax.swing.JLabel lblExpenseCategory1;
    private javax.swing.JLabel lblExpenseCategory2;
    private javax.swing.JLabel lblExpenseHistory2;
    private javax.swing.JLabel lblExpenseHistory3;
    private javax.swing.JLabel lblExpenseID;
    private javax.swing.JLabel lblExpenseID1;
    private javax.swing.JLabel lblExpenseID2;
    private javax.swing.JLabel lblPaymentType;
    private javax.swing.JLabel lblTimeanddate5;
    private javax.swing.JTextField txtFieldAmountValue;
    private javax.swing.JTextField txtFieldDateValue;
    private javax.swing.JTextField txtFieldEmployeeID;
    private javax.swing.JPasswordField userPassF;
    // End of variables declaration//GEN-END:variables
    
    //custom varaible
    private int flag = 0;
    private JFrame caller;
    private double salarry;
    //end of custom varaible
    
    
    private void setIcon(){
        this.setIconImage(new ImageIcon(getClass().getResource("/Resources/Icons/Icon.png")).getImage());
    }
    
    public void setValue(String ID, int flag){
        
        jComboBoxPaymentReason.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Salary", "Lend", "Overtime", "others" }));
        
    }
    
    private String setDateAndTime(){
        SimpleDateFormat dFormat = new SimpleDateFormat("dd/MM/yy HH:mm:ss");
        Date d = new Date();
        String datetime = dFormat.format(d);
        return datetime;
    }
    
    @Override
    public void processWindowEvent(WindowEvent e) {
        if (e.getID() == WindowEvent.WINDOW_CLOSING) {
            caller.setEnabled(true);
            dispose();
        }
    }
    
    
    public void setCaller(JFrame frame){
        this.caller = frame;
    }

    private void setSalary() {
        Integer workdays = Integer.parseInt(jLabelWorkdaysValue.getText());
        Integer present = Integer.parseInt(jLabelPrasentvalue.getText());
        Integer late = Integer.parseInt(jLabelLateValue.getText());
        Integer absent = Integer.parseInt(jLabelAbsentValue.getText());
        Integer leave = Integer.parseInt(jLabelLeaveValue.getText());
        Integer others = Integer.parseInt(jLabelOthersValue.getText());
        
        Double salPerDay = (Double) this.salarry / workdays;
        Double deductedSalForLate = (Double.parseDouble(jTextFieldLate.getText()) * salPerDay)/100;
        Double totalsal = (salPerDay*present) + (salPerDay*leave) + ((salPerDay - deductedSalForLate)*late);
        txtFieldAmountValue.setText(""+totalsal);
    }
    
}
