package UI.PopUp;

import Database.DBConnectionProvider;
import Others.Functions;
import UI.BigPopUp.Bills;
import UI.BigPopUp.Invoice;
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import rakibs.traders.RakibsTraders;

/**
 *
 * @author RH Rafi
 */
public class TakeAttendance extends javax.swing.JFrame {

    /**
     * Creates new form Delete
     */
    public TakeAttendance() {
        initComponents();
        setIcon();
        setValue();
        initComboEmployeeID();
        setDateAndTime();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblEmpID = new javax.swing.JLabel();
        jTextFieldDate = new javax.swing.JTextField();
        txtFieldEndTime = new javax.swing.JTextField();
        jTextFieldEmployeeName = new javax.swing.JTextField();
        lblEndTime = new javax.swing.JLabel();
        lblTimeanddate4 = new javax.swing.JLabel();
        lblStartTime = new javax.swing.JLabel();
        txtFieldStartTime = new javax.swing.JTextField();
        jButtonSave = new javax.swing.JButton();
        jComboBoxStatus = new javax.swing.JComboBox<>();
        lblEmpID1 = new javax.swing.JLabel();
        lblStatus = new javax.swing.JLabel();
        jTextFieldEmployeeID = new javax.swing.JTextField();
        jLabelBackground = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMinimumSize(new java.awt.Dimension(619, 321));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblEmpID.setFont(new java.awt.Font("Titillium Web", 0, 24)); // NOI18N
        lblEmpID.setForeground(new java.awt.Color(204, 204, 204));
        lblEmpID.setText("Employee Name:");
        getContentPane().add(lblEmpID, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, 180, -1));

        jTextFieldDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldDateActionPerformed(evt);
            }
        });
        getContentPane().add(jTextFieldDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 10, 200, -1));
        getContentPane().add(txtFieldEndTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 140, 100, 23));

        jTextFieldEmployeeName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldEmployeeNameFocusGained(evt);
            }
        });
        jTextFieldEmployeeName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldEmployeeNameActionPerformed(evt);
            }
        });
        getContentPane().add(jTextFieldEmployeeName, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 100, 290, -1));

        lblEndTime.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblEndTime.setForeground(new java.awt.Color(255, 255, 255));
        lblEndTime.setText("End Time:");
        getContentPane().add(lblEndTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(253, 140, 80, 23));

        lblTimeanddate4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblTimeanddate4.setForeground(new java.awt.Color(255, 255, 255));
        lblTimeanddate4.setText("Date:");
        getContentPane().add(lblTimeanddate4, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 10, 103, 23));

        lblStartTime.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblStartTime.setForeground(new java.awt.Color(255, 255, 255));
        lblStartTime.setText("Start Time: ");
        getContentPane().add(lblStartTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 140, 103, 23));
        getContentPane().add(txtFieldStartTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 140, 100, 23));

        jButtonSave.setBackground(new java.awt.Color(67, 196, 114));
        jButtonSave.setFont(new java.awt.Font("Titillium Web", 1, 12)); // NOI18N
        jButtonSave.setForeground(new java.awt.Color(255, 255, 255));
        jButtonSave.setText("Save");
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 230, 150, 30));

        jComboBoxStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxStatusActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBoxStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 190, 200, -1));

        lblEmpID1.setFont(new java.awt.Font("Titillium Web", 0, 24)); // NOI18N
        lblEmpID1.setForeground(new java.awt.Color(204, 204, 204));
        lblEmpID1.setText("Employee ID:");
        getContentPane().add(lblEmpID1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 50, 170, -1));

        lblStatus.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblStatus.setForeground(new java.awt.Color(255, 255, 255));
        lblStatus.setText("Status:");
        getContentPane().add(lblStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 190, 130, 23));
        getContentPane().add(jTextFieldEmployeeID, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 60, 290, -1));

        jLabelBackground.setForeground(new java.awt.Color(255, 255, 255));
        jLabelBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/background.png"))); // NOI18N
        getContentPane().add(jLabelBackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 620, 320));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed
        // TODO add your handling code here:
        Connection con = DBConnectionProvider.getDBConnection();
        String query1 = "select count(Emp_ID) as rowcount from emp_attendance where Date = ? and Emp_ID = ?";
        String query2 = "INSERT INTO emp_attendance (`Emp_ID`, `Date`, `Start_Time`, `End_Time`, `Status`) VALUES (?, ?, ?, ?, ?)";
        String query3 = "UPDATE emp_attendance SET Start_Time = ?, End_Time = ?, Status = ?  WHERE  Date = ? and Emp_ID = ?";
        if( jTextFieldEmployeeID.getText().equals("") || jTextFieldEmployeeName.getText().equals("")){
                NoValue page = new NoValue();
                page.setCaller(this);
                //caller.setEnabled(true);
                RakibsTraders.popUp(page);
        }else{
            String date = jTextFieldDate.getText();
            String year = date.substring(date.lastIndexOf("/")+1);
            String month = date.substring(date.indexOf("/")+1, date.lastIndexOf("/"));
            String day = date.substring(0, date.indexOf("/"));
            String id = jTextFieldEmployeeID.getText();
            System.out.println(year+ "-"+ month+"-"+day);

            try{
                PreparedStatement pstmt1 = con.prepareStatement(query1);
                pstmt1.setString(1, year+ "-"+ month+"-"+day);
                pstmt1.setString(2, id);
                //pstmt.setString(4, time);
                //pstmt.setString(5, jComboBoxStatus.getSelectedItem().toString());
                //pstmt.setDouble(6, Double.parseDouble(txtFieldEndTime.getText()));

                ResultSet rs1 = pstmt1.executeQuery();
                while(rs1.next()){
                    String start_Time = txtFieldStartTime.getText();
                    String end_Time = txtFieldEndTime.getText();
                    String status = (String) jComboBoxStatus.getSelectedItem();
                    if(rs1.getInt("rowcount")==1){
                        //update();
                        PreparedStatement pstmt3 = con.prepareStatement(query3);
                        pstmt3.setString(1, start_Time);
                        pstmt3.setString(2, end_Time);
                        pstmt3.setString(3, status);
                        pstmt3.setString(4, year+ "-"+ month+"-"+day);
                        pstmt3.setString(5, id);
                        pstmt3.executeUpdate();
                        Updated page = new Updated();
                        RakibsTraders.popUp(page);
                    }else if(rs1.getInt("rowcount")==0){
                        //insert();
                        PreparedStatement pstmt2 = con.prepareStatement(query2);
                        pstmt2.setString(1, id);
                        pstmt2.setString(2, year+ "-"+ month+"-"+day);
                        pstmt2.setString(3, start_Time);
                        pstmt2.setString(4, end_Time);
                        pstmt2.setString(5, status);
                        pstmt2.executeUpdate();
                        Save page = new Save();
                        RakibsTraders.popUp(page);
                    }
                }

            } catch(Exception ex){
                System.out.println("Failed to get DBConn:: "+ex.getMessage());
                NoConnection no = new NoConnection();
                RakibsTraders.popUp(no);
            }
            caller.setEnabled(true);
            
            this.dispose();
        }
        
        
        
        
    }//GEN-LAST:event_jButtonSaveActionPerformed

    private void jTextFieldDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldDateActionPerformed

    private void jComboBoxStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxStatusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxStatusActionPerformed

    private void jTextFieldEmployeeNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldEmployeeNameFocusGained
        // TODO add your handling code here:
        Connection con = DBConnectionProvider.getDBConnection();
        String query1 = "select employee_name from employee where emp_ID = ?";
        String query2 = "select count(Emp_ID) as rowcount from emp_attendance where Date = ? and Emp_ID = ?";
        String query3 = "select Start_Time, End_Time from emp_attendance where Date = ? and Emp_ID = ?";
        String date = jTextFieldDate.getText();
        String year = date.substring(date.lastIndexOf("/")+1);
        String month = date.substring(date.indexOf("/")+1, date.lastIndexOf("/"));
        String day = date.substring(0, date.indexOf("/"));
        String id = jTextFieldEmployeeID.getText();
        //companyName.add("11Start point");
        try{
            PreparedStatement pstmt1 = con.prepareStatement(query1);
            pstmt1.setString(1,id);
            ResultSet rs1 = pstmt1.executeQuery();
            while(rs1.next())
                jTextFieldEmployeeName.setText(rs1.getString("employee_name"));
            PreparedStatement pstmt2 = con.prepareStatement(query2);
            pstmt2.setString(1, year+ "-"+ month+"-"+day);
            pstmt2.setString(2, id);
            ResultSet rs2 = pstmt2.executeQuery();
            while(rs2.next()){
                if(rs2.getInt("rowcount")==1){
                    PreparedStatement pstmt3 = con.prepareStatement(query3);
                    pstmt3.setString(1, year+ "-"+ month+"-"+day);
                    pstmt3.setString(2, id);
                    ResultSet rs3 = pstmt3.executeQuery();
                    while(rs3.next()){
                        txtFieldStartTime.setText(rs3.getString("Start_Time"));
                        txtFieldEndTime.setText(rs3.getString("End_Time"));
                    }
                }
            }
        }catch(Exception ex){
            System.out.println("No database connection"+ex);
            NoConnection no = new NoConnection();
            RakibsTraders.popUp(no);
        }
        
    }//GEN-LAST:event_jTextFieldEmployeeNameFocusGained

    private void jTextFieldEmployeeNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldEmployeeNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldEmployeeNameActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TakeAttendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TakeAttendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TakeAttendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TakeAttendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TakeAttendance().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonSave;
    private javax.swing.JComboBox<String> jComboBoxStatus;
    private javax.swing.JLabel jLabelBackground;
    private javax.swing.JTextField jTextFieldDate;
    private javax.swing.JTextField jTextFieldEmployeeID;
    private javax.swing.JTextField jTextFieldEmployeeName;
    private javax.swing.JLabel lblEmpID;
    private javax.swing.JLabel lblEmpID1;
    private javax.swing.JLabel lblEndTime;
    private javax.swing.JLabel lblStartTime;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JLabel lblTimeanddate4;
    private javax.swing.JTextField txtFieldEndTime;
    private javax.swing.JTextField txtFieldStartTime;
    // End of variables declaration//GEN-END:variables
    
    //custom varaible
    private JFrame caller;
    private ArrayList<String> employeeID = new ArrayList<>();
    //end of custom varaible
    
    
    private void setIcon(){
        this.setIconImage(new ImageIcon(getClass().getResource("/Resources/Icons/Icon.png")).getImage());
    }
    
    public void setValue(){
        jComboBoxStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Present", "Late", "Off Day", "Paid Leave", "Unpaid Leave", "Sick", "Others" }));
        
    }
    
    private void initComboEmployeeID(){
        employeeID = Functions.employeeID();
        Functions.setupAutoComplete(jTextFieldEmployeeID, employeeID); 
    }
    
    private void setDateAndTime(){
        SimpleDateFormat dFormat = new SimpleDateFormat("dd/MM/yyyy");
        Date d = new Date();
        String date = dFormat.format(d);
        jTextFieldDate.setText(date);
        Calendar cal = new GregorianCalendar();
        int sec = cal.get(Calendar.SECOND);
        //System.out.println(sec);
        int hour = cal.get(Calendar.HOUR);
        int min = cal.get(Calendar.MINUTE);
        int am_pm = cal.get(Calendar.AM_PM);
        if(am_pm == 0){
            String time = "" + hour + " : " + min + " : " + sec + " " + "AM";
            txtFieldStartTime.setText(time);
            txtFieldEndTime.setText(time);
        }else {
            String time = "" + hour + " : " + min + " : " + sec + " " + "PM";
            txtFieldStartTime.setText(time);
            txtFieldEndTime.setText(time);
        }
    }
    
    @Override
    public void processWindowEvent(WindowEvent e) {
        if (e.getID() == WindowEvent.WINDOW_CLOSING) {
            caller.setEnabled(true);
            dispose();
        }
    }
    
    
    public void setCaller(JFrame frame){
        this.caller = frame;
    }
    
}
