package UI.PopUp;

import Database.DBConnectionProvider;
import Others.Functions;
import UI.BigPopUp.Bills;
import UI.BigPopUp.Invoice;
import UI.BigPopUp.VendorList;
import UI.LoginPage;
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import rakibs.traders.RakibsTraders;

/**
 *
 * @author RH Rafi
 */
public class EditExpense extends javax.swing.JFrame {

    /**
     * Creates new form Delete
     */
    public EditExpense() {
        initComponents();
        setIcon();
    }
    private void clearField() {
         this.txtFieldDateValue.setText("");
         this.jTextFieldExpenseID.setText("");
         this.txtFieldExpenseCategory.setText("");
         this.txtFieldExpenseCategoryOptional.setText("");
         this.txtFieldAccountValue1.setText("");
         this.txtFieldAmountValue.setText("");
         this.txtFieldNotesValue.setText("");
         this.txtFieldDateValue.setText("");
//         initComboProductID();
    }
     private boolean checkPassword(){
        char[] passArray = userPassF.getPassword();
        String pass = String.valueOf(passArray);

        if( pass.equals("admin") || pass.equals(LoginPage.getRef().userPass())){
            return true;
        }
        jLabelWrong.setVisible(true);    
        return false; 
    }
     
      private boolean checkField(){
        if(this.txtFieldExpenseCategory.getText().equals("") || this.txtFieldAmountValue.getText().equals("") ){
//            System.err.println(this.txtFieldAmountValue.getText() + " EROR ");
            return true;
        }
        else return false;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonAddPayment1 = new javax.swing.JButton();
        jButtonAddPayment = new javax.swing.JButton();
        jTextFieldExpenseID = new javax.swing.JTextField();
        lblExpenseID = new javax.swing.JLabel();
        lblExpenseCategory = new javax.swing.JLabel();
        txtFieldExpenseCategory = new javax.swing.JTextField();
        txtFieldExpenseCategoryOptional = new javax.swing.JTextField();
        jComboBoxPaymentMethodValue = new javax.swing.JComboBox<>();
        lblPaymentType = new javax.swing.JLabel();
        lblAccount = new javax.swing.JLabel();
        txtFieldAccountValue1 = new javax.swing.JTextField();
        txtFieldAmountValue = new javax.swing.JTextField();
        lblAccount1 = new javax.swing.JLabel();
        lbNotes = new javax.swing.JLabel();
        txtFieldNotesValue = new javax.swing.JTextField();
        jButtonOK = new javax.swing.JButton();
        jButtonAddPayment2 = new javax.swing.JButton();
        userPassF = new javax.swing.JPasswordField();
        jLabelWrong = new javax.swing.JLabel();
        lblTimeanddate5 = new javax.swing.JLabel();
        txtFieldDateValue = new javax.swing.JTextField();
        lblDate = new javax.swing.JLabel();
        jLabelBackground = new javax.swing.JLabel();

        jButtonAddPayment1.setBackground(new java.awt.Color(67, 196, 114));
        jButtonAddPayment1.setFont(new java.awt.Font("Titillium Web", 1, 12)); // NOI18N
        jButtonAddPayment1.setForeground(new java.awt.Color(255, 255, 255));
        jButtonAddPayment1.setText("UPDATE");
        jButtonAddPayment1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddPayment1ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMinimumSize(new java.awt.Dimension(700, 500));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButtonAddPayment.setBackground(new java.awt.Color(255, 0, 0));
        jButtonAddPayment.setFont(new java.awt.Font("Titillium Web", 1, 12)); // NOI18N
        jButtonAddPayment.setForeground(new java.awt.Color(255, 255, 255));
        jButtonAddPayment.setText("DELETE");
        jButtonAddPayment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddPaymentActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonAddPayment, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 410, 150, 30));

        jTextFieldExpenseID.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        getContentPane().add(jTextFieldExpenseID, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 58, 250, 30));

        lblExpenseID.setFont(new java.awt.Font("Titillium Web", 1, 16)); // NOI18N
        lblExpenseID.setForeground(new java.awt.Color(255, 255, 255));
        lblExpenseID.setText("Expense ID:");
        getContentPane().add(lblExpenseID, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 60, 110, 23));

        lblExpenseCategory.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblExpenseCategory.setForeground(new java.awt.Color(255, 255, 255));
        lblExpenseCategory.setText("Expense Category :");
        getContentPane().add(lblExpenseCategory, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 110, 130, 23));

        txtFieldExpenseCategory.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtFieldExpenseCategoryFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFieldExpenseCategoryFocusLost(evt);
            }
        });
        txtFieldExpenseCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFieldExpenseCategoryActionPerformed(evt);
            }
        });
        getContentPane().add(txtFieldExpenseCategory, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 110, 370, 23));

        txtFieldExpenseCategoryOptional.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtFieldExpenseCategoryOptionalFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFieldExpenseCategoryOptionalFocusLost(evt);
            }
        });
        txtFieldExpenseCategoryOptional.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFieldExpenseCategoryOptionalActionPerformed(evt);
            }
        });
        getContentPane().add(txtFieldExpenseCategoryOptional, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 140, 370, 23));

        jComboBoxPaymentMethodValue.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cash", "Cheque", "Bank", "Others" }));
        getContentPane().add(jComboBoxPaymentMethodValue, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 170, 370, -1));

        lblPaymentType.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblPaymentType.setForeground(new java.awt.Color(255, 255, 255));
        lblPaymentType.setText("Payment Type:");
        getContentPane().add(lblPaymentType, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 170, 103, 23));

        lblAccount.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblAccount.setForeground(new java.awt.Color(255, 255, 255));
        lblAccount.setText("Account:");
        getContentPane().add(lblAccount, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 200, 103, 23));

        txtFieldAccountValue1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtFieldAccountValue1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFieldAccountValue1FocusLost(evt);
            }
        });
        txtFieldAccountValue1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFieldAccountValue1ActionPerformed(evt);
            }
        });
        getContentPane().add(txtFieldAccountValue1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 200, 370, 23));

        txtFieldAmountValue.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        txtFieldAmountValue.setForeground(new java.awt.Color(255, 102, 0));
        txtFieldAmountValue.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtFieldAmountValueFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFieldAmountValueFocusLost(evt);
            }
        });
        txtFieldAmountValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFieldAmountValueActionPerformed(evt);
            }
        });
        getContentPane().add(txtFieldAmountValue, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 230, 370, 40));

        lblAccount1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblAccount1.setForeground(new java.awt.Color(255, 102, 0));
        lblAccount1.setText("Amount:");
        getContentPane().add(lblAccount1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 230, 103, 40));

        lbNotes.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbNotes.setForeground(new java.awt.Color(255, 255, 255));
        lbNotes.setText("Notes:");
        getContentPane().add(lbNotes, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 290, 103, 23));

        txtFieldNotesValue.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtFieldNotesValueFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFieldNotesValueFocusLost(evt);
            }
        });
        txtFieldNotesValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFieldNotesValueActionPerformed(evt);
            }
        });
        getContentPane().add(txtFieldNotesValue, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 280, 370, 60));

        jButtonOK.setBackground(new java.awt.Color(0, 51, 153));
        jButtonOK.setForeground(new java.awt.Color(255, 255, 255));
        jButtonOK.setText("OK");
        jButtonOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOKActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonOK, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 60, 70, 30));

        jButtonAddPayment2.setBackground(new java.awt.Color(0, 0, 204));
        jButtonAddPayment2.setFont(new java.awt.Font("Titillium Web", 1, 12)); // NOI18N
        jButtonAddPayment2.setForeground(new java.awt.Color(255, 255, 255));
        jButtonAddPayment2.setText("UPDATE");
        jButtonAddPayment2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddPayment2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonAddPayment2, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 410, 150, 30));

        userPassF.setFont(new java.awt.Font("Titillium", 0, 14)); // NOI18N
        userPassF.setToolTipText("Password");
        userPassF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                userPassFFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                userPassFFocusLost(evt);
            }
        });
        userPassF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userPassFActionPerformed(evt);
            }
        });
        userPassF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                userPassFKeyPressed(evt);
            }
        });
        getContentPane().add(userPassF, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 350, 190, 30));

        jLabelWrong.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/cross-mark.png"))); // NOI18N
        getContentPane().add(jLabelWrong, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 350, 30, 30));
        jLabelWrong.setVisible(false);

        lblTimeanddate5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblTimeanddate5.setForeground(new java.awt.Color(255, 255, 255));
        lblTimeanddate5.setText("Enter Password");
        getContentPane().add(lblTimeanddate5, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 350, 103, 23));

        txtFieldDateValue.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtFieldDateValueFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFieldDateValueFocusLost(evt);
            }
        });
        txtFieldDateValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFieldDateValueActionPerformed(evt);
            }
        });
        getContentPane().add(txtFieldDateValue, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 20, 170, 23));

        lblDate.setFont(new java.awt.Font("Titillium Web", 1, 16)); // NOI18N
        lblDate.setForeground(new java.awt.Color(255, 255, 255));
        lblDate.setText("Date:");
        getContentPane().add(lblDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 20, 110, 23));

        jLabelBackground.setForeground(new java.awt.Color(255, 255, 255));
        jLabelBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/background.png"))); // NOI18N
        getContentPane().add(jLabelBackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 700, 480));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAddPaymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddPaymentActionPerformed
        // TODO add your handling code here:
        
        if(checkPassword() && !checkField() ){
                Connection con = DBConnectionProvider.getDBConnection();
                String query = "DELETE FROM expenses WHERE exp_ID = ?";
                String query2 = "DELETE FROM employee_salary WHERE exp_ID = ? and emp_ID = ?";
                
                
                if( txtFieldExpenseCategoryOptional.getText().startsWith("EMP#") && txtFieldAccountValue1.getText().equals("NONE") && txtFieldExpenseCategory.getText().equals("Salary") ){
                    PreparedStatement pstmt;
                    try {
                        pstmt = con.prepareStatement(query2);
                        pstmt.setString(1,jTextFieldExpenseID.getText());
                        pstmt.setString(2,txtFieldExpenseCategoryOptional.getText());
                        pstmt.executeUpdate();
                        
                    } catch (SQLException ex) {
                        Logger.getLogger(EditExpense.class.getName()).log(Level.SEVERE, null, ex);
                    }
               }
                
                try{
                    PreparedStatement pstmt = con.prepareStatement(query);
                    pstmt.setString(1,jTextFieldExpenseID.getText());
                    pstmt.executeUpdate();
                    DataDeleted page = new DataDeleted();
                    page.setMessage("Expense");
                    RakibsTraders.popUp(page);
                    
                }catch(Exception ex){
                    System.out.println("Failed to get DBConn:: "+ex.getMessage());
                    NoConnection no = new NoConnection();
                    RakibsTraders.popUp(no);
                }
                caller.setEnabled(true);
                this.dispose();
        }
        else {
            checkPassword page = new checkPassword();
            RakibsTraders.popUp(page);
        }
        
        
    }//GEN-LAST:event_jButtonAddPaymentActionPerformed

    private void txtFieldExpenseCategoryFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFieldExpenseCategoryFocusGained
        // TODO add your handling code here:
       
    }//GEN-LAST:event_txtFieldExpenseCategoryFocusGained

    private void txtFieldExpenseCategoryFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFieldExpenseCategoryFocusLost

    }//GEN-LAST:event_txtFieldExpenseCategoryFocusLost

    private void txtFieldExpenseCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFieldExpenseCategoryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFieldExpenseCategoryActionPerformed

    private void txtFieldExpenseCategoryOptionalFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFieldExpenseCategoryOptionalFocusGained
        // TODO add your handling code here:

    }//GEN-LAST:event_txtFieldExpenseCategoryOptionalFocusGained

    private void txtFieldExpenseCategoryOptionalFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFieldExpenseCategoryOptionalFocusLost
        // TODO add your handling code here:

    }//GEN-LAST:event_txtFieldExpenseCategoryOptionalFocusLost

    private void txtFieldExpenseCategoryOptionalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFieldExpenseCategoryOptionalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFieldExpenseCategoryOptionalActionPerformed

    private void txtFieldAccountValue1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFieldAccountValue1FocusGained
        // TODO add your handling code here:

    }//GEN-LAST:event_txtFieldAccountValue1FocusGained

    private void txtFieldAccountValue1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFieldAccountValue1FocusLost
        // TODO add your handling code here:

    }//GEN-LAST:event_txtFieldAccountValue1FocusLost

    private void txtFieldAccountValue1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFieldAccountValue1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFieldAccountValue1ActionPerformed

    private void txtFieldAmountValueFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFieldAmountValueFocusGained
        // TODO add your handling code here:

    }//GEN-LAST:event_txtFieldAmountValueFocusGained

    private void txtFieldAmountValueFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFieldAmountValueFocusLost
        // TODO add your handling code here:

    }//GEN-LAST:event_txtFieldAmountValueFocusLost

    private void txtFieldAmountValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFieldAmountValueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFieldAmountValueActionPerformed

    private void txtFieldNotesValueFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFieldNotesValueFocusGained
        // TODO add your handling code here:

    }//GEN-LAST:event_txtFieldNotesValueFocusGained

    private void txtFieldNotesValueFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFieldNotesValueFocusLost
        // TODO add your handling code here:

    }//GEN-LAST:event_txtFieldNotesValueFocusLost

    private void txtFieldNotesValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFieldNotesValueActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_txtFieldNotesValueActionPerformed

    
    
    private void jButtonOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOKActionPerformed
        // TODO add your handling code here:
        String ExpID = jTextFieldExpenseID.getText();
        
        if( !ExpID.equals("") && ExpID.startsWith("EXP#")){
            clearField();
            Connection con = DBConnectionProvider.getDBConnection();
            String query = "select * from expenses where exp_ID = ?";
                
            try {
                PreparedStatement pstmt = con.prepareStatement(query);
                pstmt.setString(1, ExpID);
                ResultSet rs = pstmt.executeQuery();
                
                while( rs.next() ){
                    this.jTextFieldExpenseID.setText(ExpID);
                    this.txtFieldDateValue.setText(rs.getString("time") + " " + rs.getString("date"));
                    this.txtFieldExpenseCategory.setText(rs.getString("category"));
                    this.txtFieldExpenseCategoryOptional.setText(rs.getString("optional_category"));
                    this.jComboBoxPaymentMethodValue.setSelectedItem(rs.getString("payment_type"));
                    this.txtFieldAccountValue1.setText(rs.getString("account"));
                    this.txtFieldAmountValue.setText(String.format("%.4f",rs.getDouble("amount")));
                    this.txtFieldNotesValue.setText(rs.getString("notes"));
                }
                
                
            } catch (SQLException ex) {
                Logger.getLogger(EditExpense.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else clearField();
        
    }//GEN-LAST:event_jButtonOKActionPerformed

    private void jButtonAddPayment1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddPayment1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonAddPayment1ActionPerformed
    
   
    
   
    private void jButtonAddPayment2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddPayment2ActionPerformed
        // TODO add your handling code here:
        if( checkPassword() && !checkField() ){
                Connection con = DBConnectionProvider.getDBConnection();
                String query = "UPDATE expenses SET date = ?, time = ?, category = ?, optional_category = ?,account = ?,amount = ?, notes = ?,payment_type = ?  WHERE  exp_ID = ?";
                String query2 = "UPDATE employee_salary SET date = ?, time = ?, payment_method = ?,payment_reason = ?,amount = ?  WHERE  exp_ID = ? and emp_ID = ?";
                String dateAndTime = txtFieldDateValue.getText();
                String time = dateAndTime.substring(0,dateAndTime.indexOf(" ")+3);
                String date = dateAndTime.substring(dateAndTime.indexOf(" ") + 4);
              
               if( txtFieldExpenseCategoryOptional.getText().startsWith("EMP#") && txtFieldAccountValue1.getText().equals("NONE") && txtFieldExpenseCategory.getText().equals("Salary") ){
                    PreparedStatement pstmt;
                    try {
                        pstmt = con.prepareStatement(query2);
                        pstmt.setString(1,date);
                        pstmt.setString(2,time);
                        pstmt.setString(3,(jComboBoxPaymentMethodValue.getSelectedItem()+""));
                        pstmt.setString(4,txtFieldExpenseCategory.getText());
                        pstmt.setDouble(5,Double.parseDouble(txtFieldAmountValue.getText()));
                        pstmt.setString(6,jTextFieldExpenseID.getText());
                        pstmt.setString(7,txtFieldExpenseCategoryOptional.getText());
                        pstmt.executeUpdate();
                        
                    } catch (SQLException ex) {
                        Logger.getLogger(EditExpense.class.getName()).log(Level.SEVERE, null, ex);
                    }
               }
               
                
              try{
                PreparedStatement pstmt = con.prepareStatement(query);
                String exp_ID = jTextFieldExpenseID.getText();
                String category = this.txtFieldExpenseCategory.getText();
                String optionalCategory = this.txtFieldExpenseCategoryOptional.getText();
                String account = this.txtFieldAccountValue1.getText();
                Double amount = Double.parseDouble(this.txtFieldAmountValue.getText());
                String notes = this.txtFieldNotesValue.getText();
                String paymentType = (String) this.jComboBoxPaymentMethodValue.getSelectedItem();
                pstmt.setString(1,date);
                pstmt.setString(2,time);
                pstmt.setString(3,category);
                pstmt.setString(4,optionalCategory);
                pstmt.setString(5,account);
                pstmt.setDouble(6,amount);
                pstmt.setString(7,notes);
                pstmt.setString(8,paymentType);
                pstmt.setString(9,exp_ID);
                pstmt.executeUpdate();
                clearField();
                Updated up = new Updated();
                userPassF.setText("");
                RakibsTraders.popUp(up);
                caller.setEnabled(true);
                this.dispose();
            }catch(Exception ex){
                Logger.getLogger(EditExpense.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else{
            checkPassword page = new checkPassword();
            RakibsTraders.popUp(page);
        }
        
        
    }//GEN-LAST:event_jButtonAddPayment2ActionPerformed

    private void userPassFFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_userPassFFocusGained
        userPassF.setText("");
        //        userPassF.setForeground(Color.black);
        //        lblPassInvalid.setVisible(false);
        jLabelWrong.setVisible(false);
    }//GEN-LAST:event_userPassFFocusGained

    private void userPassFFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_userPassFFocusLost
        //        userPassF.setForeground(Color.GRAY);
    }//GEN-LAST:event_userPassFFocusLost

    private void userPassFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userPassFActionPerformed
        // TODO add your handling code here:
        //        btnGoActionPerformed(evt);
    }//GEN-LAST:event_userPassFActionPerformed

    private void userPassFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_userPassFKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_userPassFKeyPressed

    private void txtFieldDateValueFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFieldDateValueFocusGained
        // TODO add your handling code here:

    }//GEN-LAST:event_txtFieldDateValueFocusGained

    private void txtFieldDateValueFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFieldDateValueFocusLost
        // TODO add your handling code here:

    }//GEN-LAST:event_txtFieldDateValueFocusLost

    private void txtFieldDateValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFieldDateValueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFieldDateValueActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
       
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditExpense().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAddPayment;
    private javax.swing.JButton jButtonAddPayment1;
    private javax.swing.JButton jButtonAddPayment2;
    private javax.swing.JButton jButtonOK;
    private javax.swing.JComboBox<String> jComboBoxPaymentMethodValue;
    private javax.swing.JLabel jLabelBackground;
    private javax.swing.JLabel jLabelWrong;
    private javax.swing.JTextField jTextFieldExpenseID;
    private javax.swing.JLabel lbNotes;
    private javax.swing.JLabel lblAccount;
    private javax.swing.JLabel lblAccount1;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblExpenseCategory;
    private javax.swing.JLabel lblExpenseID;
    private javax.swing.JLabel lblPaymentType;
    private javax.swing.JLabel lblTimeanddate5;
    private javax.swing.JTextField txtFieldAccountValue1;
    private javax.swing.JTextField txtFieldAmountValue;
    private javax.swing.JTextField txtFieldDateValue;
    private javax.swing.JTextField txtFieldExpenseCategory;
    private javax.swing.JTextField txtFieldExpenseCategoryOptional;
    private javax.swing.JTextField txtFieldNotesValue;
    private javax.swing.JPasswordField userPassF;
    // End of variables declaration//GEN-END:variables
    
    //custom varaible
    private int flag = 0;
    private JFrame caller;
    //end of custom varaible
    
    
    private void setIcon(){
        this.setIconImage(new ImageIcon(getClass().getResource("/Resources/Icons/Icon.png")).getImage());
    }
    
    public void setValue(String ID, int flag){
        
        jComboBoxPaymentMethodValue.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cash", "Cheque", "Bank", "others" }));
        
    }
    
    private String setDateAndTime(){
        SimpleDateFormat dFormat = new SimpleDateFormat("dd/MM/yy HH:mm:ss");
        Date d = new Date();
        String datetime = dFormat.format(d);
        return datetime;
    }
    
    @Override
    public void processWindowEvent(WindowEvent e) {
        if (e.getID() == WindowEvent.WINDOW_CLOSING) {
            caller.setEnabled(true);
            dispose();
        }
    }
    
    
    public void setCaller(JFrame frame){
        this.caller = frame;
    }
    
}
