package UI.BigPopUp;


import Database.DBConnectionProvider;
import Others.Functions;
import UI.BigPopUp.ProductsTable;
import UI.BigPopUp.ViewStock;
import UI.Buy;
import UI.Expenses;
import UI.LoginPage;
import UI.PopUp.DataDeleted;
import UI.PopUp.DeleteProducts;
import UI.PopUp.InsertUserName;
import UI.PopUp.NoChangeOfAdmin;
import UI.PopUp.NoConnection;
import UI.PopUp.Save;
import UI.PopUp.Updated;
import UI.PopUp.WrongPass;
import UI.ReturnProducts;
import UI.Sell;
import UI.Settings;
import UI.Stock;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.awt.*;
import java.awt.event.WindowEvent;
import static java.lang.Thread.sleep;
import java.text.SimpleDateFormat;
import java.util.*;
import javax.annotation.Resources.*;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import rakibs.traders.RakibsTraders;

/**
 *
 * @author RH Rafi
 */
public class EditUser extends javax.swing.JFrame {

    /**
     * Creates new form Products
     */
    public EditUser() {
        initComponents();
        //initComboCompanyName();
        setIcon();
        //setTime();
        jLabel1Right.setVisible(false);
        jLabelEror.setVisible(false);
        jLabel1Right1.setVisible(false);
        jLabelEror1.setVisible(false);
        jLabel1Right2.setVisible(true);
        jLabel1Right3.setVisible(false);
        jLabelEror2.setVisible(false);
        jLabel1Right2.setVisible(false);
    }
    
    //Rafis legendary of reference
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblHome = new javax.swing.JLabel();
        lblPageTitle = new javax.swing.JLabel();
        lbUSERNAME = new javax.swing.JLabel();
        jButtonDelete = new javax.swing.JButton();
        lblStartingDate = new javax.swing.JLabel();
        txtUserNameValue = new javax.swing.JTextField();
        userPassF = new javax.swing.JPasswordField();
        btnRefrash1 = new javax.swing.JButton();
        jButtonSubmit1 = new javax.swing.JButton();
        lblPageTitle1 = new javax.swing.JLabel();
        lbUSERNAME1 = new javax.swing.JLabel();
        txtUserNameValue1 = new javax.swing.JTextField();
        userPassF1 = new javax.swing.JPasswordField();
        lblStartingDate1 = new javax.swing.JLabel();
        lblStartingDate2 = new javax.swing.JLabel();
        userPassF2 = new javax.swing.JPasswordField();
        jButtonSave = new javax.swing.JButton();
        jButtonUpdate = new javax.swing.JButton();
        jLabel1Right = new javax.swing.JLabel();
        jLabelEror = new javax.swing.JLabel();
        lblStartingDate3 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel1Right1 = new javax.swing.JLabel();
        jLabel1Right2 = new javax.swing.JLabel();
        jLabelEror1 = new javax.swing.JLabel();
        jLabel1Right3 = new javax.swing.JLabel();
        jLabelEror2 = new javax.swing.JLabel();
        lblStartingDate4 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        Background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblHome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/Logo.png"))); // NOI18N
        lblHome.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblHome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblHomeMouseClicked(evt);
            }
        });
        getContentPane().add(lblHome, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 130, 40));

        lblPageTitle.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblPageTitle.setForeground(new java.awt.Color(67, 196, 114));
        lblPageTitle.setText("ADD NEW USER");
        getContentPane().add(lblPageTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 110, 230, 43));

        lbUSERNAME.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbUSERNAME.setForeground(new java.awt.Color(255, 255, 255));
        lbUSERNAME.setText("USER NAME");
        getContentPane().add(lbUSERNAME, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 160, 130, 23));

        jButtonDelete.setBackground(new java.awt.Color(204, 0, 0));
        jButtonDelete.setFont(new java.awt.Font("Titillium", 1, 13)); // NOI18N
        jButtonDelete.setForeground(new java.awt.Color(255, 255, 255));
        jButtonDelete.setText("DELETE");
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 540, 130, 30));

        lblStartingDate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblStartingDate.setForeground(new java.awt.Color(255, 255, 255));
        lblStartingDate.setText("User Level:");
        getContentPane().add(lblStartingDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 230, 103, 23));

        txtUserNameValue.setForeground(new java.awt.Color(204, 204, 204));
        txtUserNameValue.setText("User Name");
        txtUserNameValue.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtUserNameValueFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtUserNameValueFocusLost(evt);
            }
        });
        txtUserNameValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUserNameValueActionPerformed(evt);
            }
        });
        getContentPane().add(txtUserNameValue, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 160, 380, 23));

        userPassF.setFont(new java.awt.Font("Titillium", 0, 14)); // NOI18N
        userPassF.setToolTipText("Password");
        userPassF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                userPassFFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                userPassFFocusLost(evt);
            }
        });
        userPassF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userPassFActionPerformed(evt);
            }
        });
        userPassF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                userPassFKeyPressed(evt);
            }
        });
        getContentPane().add(userPassF, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 190, 380, 30));

        btnRefrash1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/Refresh.png"))); // NOI18N
        btnRefrash1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefrash1ActionPerformed(evt);
            }
        });
        getContentPane().add(btnRefrash1, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 180, 219, 33));

        jButtonSubmit1.setBackground(new java.awt.Color(67, 196, 114));
        jButtonSubmit1.setFont(new java.awt.Font("Titillium", 1, 13)); // NOI18N
        jButtonSubmit1.setForeground(new java.awt.Color(255, 255, 255));
        jButtonSubmit1.setText("VIEW USER LIST");
        jButtonSubmit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSubmit1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonSubmit1, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 140, 220, 30));

        lblPageTitle1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblPageTitle1.setForeground(new java.awt.Color(67, 196, 114));
        lblPageTitle1.setText("UPDATE / DELETE USER");
        getContentPane().add(lblPageTitle1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 320, 230, 43));

        lbUSERNAME1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbUSERNAME1.setForeground(new java.awt.Color(255, 255, 255));
        lbUSERNAME1.setText("USER NAME");
        getContentPane().add(lbUSERNAME1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 370, 130, 23));

        txtUserNameValue1.setForeground(new java.awt.Color(204, 204, 204));
        txtUserNameValue1.setText("User Name");
        txtUserNameValue1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtUserNameValue1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtUserNameValue1FocusLost(evt);
            }
        });
        txtUserNameValue1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUserNameValue1ActionPerformed(evt);
            }
        });
        getContentPane().add(txtUserNameValue1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 370, 380, 23));

        userPassF1.setFont(new java.awt.Font("Titillium", 0, 14)); // NOI18N
        userPassF1.setToolTipText("Password");
        userPassF1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                userPassF1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                userPassF1FocusLost(evt);
            }
        });
        userPassF1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userPassF1ActionPerformed(evt);
            }
        });
        userPassF1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                userPassF1KeyPressed(evt);
            }
        });
        getContentPane().add(userPassF1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 400, 380, 30));

        lblStartingDate1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblStartingDate1.setForeground(new java.awt.Color(255, 255, 255));
        lblStartingDate1.setText("OLD Password :");
        getContentPane().add(lblStartingDate1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 400, 103, 23));

        lblStartingDate2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblStartingDate2.setForeground(new java.awt.Color(255, 255, 255));
        lblStartingDate2.setText("NEW Password :");
        getContentPane().add(lblStartingDate2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 440, 103, 23));

        userPassF2.setFont(new java.awt.Font("Titillium", 0, 14)); // NOI18N
        userPassF2.setToolTipText("Password");
        userPassF2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                userPassF2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                userPassF2FocusLost(evt);
            }
        });
        userPassF2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userPassF2ActionPerformed(evt);
            }
        });
        userPassF2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                userPassF2KeyPressed(evt);
            }
        });
        getContentPane().add(userPassF2, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 440, 380, 30));

        jButtonSave.setBackground(new java.awt.Color(67, 196, 114));
        jButtonSave.setFont(new java.awt.Font("Titillium", 1, 13)); // NOI18N
        jButtonSave.setForeground(new java.awt.Color(255, 255, 255));
        jButtonSave.setText("SAVE");
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 280, 130, 30));

        jButtonUpdate.setBackground(new java.awt.Color(0, 0, 153));
        jButtonUpdate.setFont(new java.awt.Font("Titillium", 1, 13)); // NOI18N
        jButtonUpdate.setForeground(new java.awt.Color(255, 255, 255));
        jButtonUpdate.setText("UPDATE");
        jButtonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 540, 130, 30));

        jLabel1Right.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/verified(1).png"))); // NOI18N
        getContentPane().add(jLabel1Right, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 150, 70, 40));

        jLabelEror.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/error(1).png"))); // NOI18N
        getContentPane().add(jLabelEror, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 150, 70, 40));

        lblStartingDate3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblStartingDate3.setForeground(new java.awt.Color(255, 255, 255));
        lblStartingDate3.setText("Password :");
        getContentPane().add(lblStartingDate3, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 190, 103, 23));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Moderator", "User", "Guest"}) );
        jComboBox1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jComboBox1FocusGained(evt);
            }
        });
        getContentPane().add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 230, 380, 30));

        jLabel1Right1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/verified(1).png"))); // NOI18N
        getContentPane().add(jLabel1Right1, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 180, 70, 50));

        jLabel1Right2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/verified(1).png"))); // NOI18N
        getContentPane().add(jLabel1Right2, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 360, 70, 40));

        jLabelEror1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/error(1).png"))); // NOI18N
        getContentPane().add(jLabelEror1, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 360, 70, 40));

        jLabel1Right3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/verified(1).png"))); // NOI18N
        getContentPane().add(jLabel1Right3, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 400, 70, 40));

        jLabelEror2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/error(1).png"))); // NOI18N
        getContentPane().add(jLabelEror2, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 400, 70, 40));

        lblStartingDate4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblStartingDate4.setForeground(new java.awt.Color(255, 255, 255));
        lblStartingDate4.setText("User Level:");
        getContentPane().add(lblStartingDate4, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 480, 103, 23));

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Moderator", "User", "Guest"}) );
        jComboBox2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jComboBox2FocusGained(evt);
            }
        });
        getContentPane().add(jComboBox2, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 480, 380, 30));

        Background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/background.png"))); // NOI18N
        getContentPane().add(Background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1280, 669));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lblHomeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblHomeMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_lblHomeMouseClicked

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        // TODO add your handling code here:
        Connection con = DBConnectionProvider.getDBConnection();
        String query = "DELETE FROM user_list WHERE user_name = ?";
        String query2 = "select * from user_list where user_name = ?";
       
        char[] passArray1 = userPassF1.getPassword();
        String pass = String.valueOf(passArray1);
        
        if( txtUserNameValue.getText().equals("User Name") ){
            NoChangeOfAdmin page = new NoChangeOfAdmin();
            RakibsTraders.popUp(page);
        }
        
        else if( !txtUserNameValue1.getText().equals("") ){
            
            try {
                PreparedStatement pstmt = con.prepareStatement(query2);
                pstmt.setString(1, txtUserNameValue1.getText());
                ResultSet rs = pstmt.executeQuery();
                
                    String dbPass = "";
                    while( rs.next() ){
                        dbPass = rs.getString("user_password");
                    }
                    
                    rs.close();
                    if( dbPass.equals(pass) ){
                        try {
                        pstmt = con.prepareStatement(query);
                        pstmt.setString(1, txtUserNameValue1.getText() );
                        pstmt.executeUpdate();
                        DataDeleted page = new DataDeleted();
                        page.setMessage("User");
                        RakibsTraders.popUp(page);
                        
                       jLabel1Right2.setVisible(false);
                       jLabel1Right3.setVisible(false);
                       txtUserNameValue1.setText("");
                       userPassF1.setText("");
                       userPassF2.setText("");
                        

                    } catch (SQLException ex) {
                            Logger.getLogger(Functions.class.getName()).log(Level.SEVERE, null, ex);
                            System.out.println("Failed to get DBConn:: "+ex.getMessage());
                            NoConnection no = new NoConnection();
                            RakibsTraders.popUp(no);
                    }

                    }
            }
            catch( Exception ex){
                Logger.getLogger(Functions.class.getName()).log(Level.SEVERE, null, ex);
                System.out.println("Failed to get DBConn:: "+ex.getMessage());
                NoConnection no = new NoConnection();
                RakibsTraders.popUp(no);
                
            }
        }
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void txtUserNameValueFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtUserNameValueFocusGained
        // TODO add your handling code here:
        if( txtUserNameValue.getText().equals("User Name")){
            this.txtUserNameValue.setText("");
        }
        this.txtUserNameValue.setForeground(Color.BLACK);
    }//GEN-LAST:event_txtUserNameValueFocusGained

    private void txtUserNameValueFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtUserNameValueFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUserNameValueFocusLost

    private void txtUserNameValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUserNameValueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUserNameValueActionPerformed
    
    private void userPassFFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_userPassFFocusGained
        userPassF.setText("");
        userPassF.setForeground(Color.black);
        jLabel1Right.setVisible(false);
        jLabelEror.setVisible(false);

        
        if( !txtUserNameValue.getText().equals("User Name") ){
            if( checkUserName(txtUserNameValue.getText(),1) ){
                jLabel1Right.setVisible(true);
            }
            else{
                txtUserNameValue.grabFocus();
            }
        }
        else{
            txtUserNameValue.grabFocus();
            jLabelEror.setVisible(false);
            InsertUserName page = new InsertUserName();
            RakibsTraders.popUp(page);
            
        }

        
//        lblPassInvalid.setVisible(false);
    }//GEN-LAST:event_userPassFFocusGained

    private void userPassFFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_userPassFFocusLost
        userPassF.setForeground(Color.GRAY);
    }//GEN-LAST:event_userPassFFocusLost
    
    private boolean checkUserName( String testName, int test  ){
        boolean check = true;
        Connection con = DBConnectionProvider.getDBConnection();
        String query = "select * from user_list where user_name = ?"; 
        
        PreparedStatement pstmt;
        try {
            pstmt = con.prepareStatement( query );
            pstmt.setString( 1, testName );
            ResultSet rs = pstmt.executeQuery();
        
            if( rs.next() ) {
                if(test == 1 ) jLabelEror.setVisible(true); // if it is 1 then show it in the right position else no need. This is for me , i will use same method 2 time
                return check = false;
            }
            else{
                return check = true;
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(EditUser.class.getName()).log(Level.SEVERE, null, ex);
            NoConnection page = new NoConnection();
            RakibsTraders.popUp(page);
        }
        
        return check;
    }
    
    
    private void userPassFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userPassFActionPerformed
        // TODO add your handling code here:
        
       

    }//GEN-LAST:event_userPassFActionPerformed

    private void userPassFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_userPassFKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_userPassFKeyPressed

    private void btnRefrash1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefrash1ActionPerformed
        // TODO add your handling code here:
        jLabel1Right2.setVisible(false);
        jLabel1Right3.setVisible(false);
        txtUserNameValue1.setText("");
        userPassF1.setText("");
        userPassF2.setText("");
        txtUserNameValue.setText("User Name");
        txtUserNameValue.setForeground(new Color(204,204,204));
        userPassF.setText("");
        jLabel1Right.setVisible(false);
        jLabel1Right1.setVisible(false);
        
    }//GEN-LAST:event_btnRefrash1ActionPerformed

    private void jButtonSubmit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSubmit1ActionPerformed
        // TODO add your handling code here:
        UserList page = new UserList();
        page.setCaller(this);
        RakibsTraders.bigPopUp(page);
        this.setEnabled(false);
    }//GEN-LAST:event_jButtonSubmit1ActionPerformed

    
    
    private void txtUserNameValue1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtUserNameValue1FocusGained
        // TODO add your handling code here:
        
        txtUserNameValue1.setText("");
        txtUserNameValue1.setForeground(Color.black);
        
        
        
    }//GEN-LAST:event_txtUserNameValue1FocusGained

    private void txtUserNameValue1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtUserNameValue1FocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUserNameValue1FocusLost

    private void txtUserNameValue1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUserNameValue1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUserNameValue1ActionPerformed

    private void userPassF1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_userPassF1FocusGained
        // TODO add your handling code here:
        String user = txtUserNameValue1.getText();
        Connection con = DBConnectionProvider.getDBConnection();
        PreparedStatement pstmt;
        String query = "select * from user_list where user_name = ?";
        
        
        if( !checkUserName(user, 0) ){
            jLabelEror1.setVisible(false);
            jLabel1Right2.setVisible(true);
            
            try {
                pstmt = con.prepareStatement(query);
                pstmt.setString(1, user);
                ResultSet rs = pstmt.executeQuery();
                
                String lev = "";
                while( rs.next() ){
                    lev = rs.getString("access_level");
                }
                rs.close();
                jComboBox2.setSelectedItem(lev + "");
                
                
            } catch (SQLException ex) {
                Logger.getLogger(EditUser.class.getName()).log(Level.SEVERE, null, ex);
                NoConnection page = new NoConnection();
                RakibsTraders.popUp(page);
            }
            
            
        }
        else{
            jLabel1Right2.setVisible(false);
            jLabelEror1.setVisible(true);
        }
        
    }//GEN-LAST:event_userPassF1FocusGained

    private void userPassF1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_userPassF1FocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_userPassF1FocusLost

    private void userPassF1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userPassF1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userPassF1ActionPerformed

    private void userPassF1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_userPassF1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_userPassF1KeyPressed

    private void userPassF2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_userPassF2FocusGained
        // TODO add your handling code here:
       String user = txtUserNameValue1.getText();
       char[] passArray = userPassF1.getPassword();
       String oldPass = String.valueOf(passArray);
       
       String query = "select user_password from user_list where user_name = ?";
       Connection con = DBConnectionProvider.getDBConnection();
       PreparedStatement pstmt;
        try {
            pstmt = con.prepareStatement(query);
            pstmt.setString(1, user);
            ResultSet rs = pstmt.executeQuery();
            
            if( rs.next() ){
                String pass = rs.getString("user_password");
//                System.err.println(pass);
                if( pass.equals(oldPass) ){
                    jLabelEror2.setVisible(false);
                    jLabel1Right3.setVisible(true);
                }
                else{
                    jLabel1Right3.setVisible(false);
                    jLabelEror2.setVisible(true);
                }
            }
            else{
                userPassF1.grabFocus();
                jLabelEror2.setVisible(true);
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(EditUser.class.getName()).log(Level.SEVERE, null, ex);
        }
       
       
       
       
        
        
    }//GEN-LAST:event_userPassF2FocusGained

    private void userPassF2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_userPassF2FocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_userPassF2FocusLost

    private void userPassF2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userPassF2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userPassF2ActionPerformed

    private void userPassF2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_userPassF2KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_userPassF2KeyPressed

    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed
        // TODO add your handling code here:
        
       String user = txtUserNameValue.getText();
       char[] passArray = userPassF.getPassword();
       String pass = String.valueOf(passArray);
       
       if( !pass.equals("") ){
            Connection con = DBConnectionProvider.getDBConnection();
            String query = "insert into user_list values(?,?,?)";
            
            PreparedStatement pstmt;
           try {
               pstmt = con.prepareStatement(query);
               pstmt.setString(1, txtUserNameValue.getText());
               pstmt.setString(2, pass );
               pstmt.setString(3, "" + (jComboBox1.getSelectedItem()));
               pstmt.executeUpdate();
               Updated page = new Updated();
               RakibsTraders.popUp(page);
               
               txtUserNameValue.setText("User Name");
               txtUserNameValue.setForeground(new Color(204,204,204));
               userPassF.setText("");
               jLabel1Right.setVisible(false);
               jLabel1Right1.setVisible(false);
               
           } catch (SQLException ex) {
               NoConnection page = new NoConnection();
               RakibsTraders.popUp(page);
               Logger.getLogger(EditUser.class.getName()).log(Level.SEVERE, null, ex);
           }
           
            
       }
    }//GEN-LAST:event_jButtonSaveActionPerformed

    private void jButtonUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpdateActionPerformed
        // TODO add your handling code here:
        Connection con = DBConnectionProvider.getDBConnection();
        String query = "update user_list set user_password = ? , access_level = ? where user_name = ?";
        String query2 = "select * from user_list where user_name = ?";
        String user = txtUserNameValue1.getText() ;
        
        char[] passArray = userPassF1.getPassword();
        String pass = String.valueOf(passArray);
        
        char[] passArray1 = userPassF2.getPassword();
        String pass2 = String.valueOf(passArray1);
        
        if( !user.equals("") && !pass.equals("") ){
            System.err.println(user + " " + pass );
            try {
                PreparedStatement pstmt = con.prepareStatement(query2);
                pstmt.setString(1, user);
                ResultSet rs = pstmt.executeQuery();
                
                    String dbPass = "";
                    while( rs.next() ){
                        dbPass = rs.getString("user_password");
                    }
                    
                    rs.close();
                    if( dbPass.equals(pass) ){
                       PreparedStatement pstmt2 = con.prepareStatement(query);
                       String acc_lev = jComboBox2.getSelectedItem()+"";
                       
                       pstmt2.setString(1, pass2);
                       if( user.equals("admin") ){
                           acc_lev = "admin"; //so that nobody can not change the power of admin. 
                       }
                       
                       pstmt2.setString(2, acc_lev);
                       pstmt2.setString(3, user);
                       pstmt2.executeUpdate();
                       
                       Updated page = new Updated();
                       RakibsTraders.popUp(page);
                       
                       jLabel1Right2.setVisible(false);
                       jLabel1Right3.setVisible(false);
                       txtUserNameValue1.setText("");
                       userPassF1.setText("");
                       userPassF2.setText("");
                    }
                    else{
                        WrongPass page = new WrongPass();
                        RakibsTraders.popUp(page);
                    }
               
            
            } catch (SQLException ex) {
                Logger.getLogger(EditUser.class.getName()).log(Level.SEVERE, null, ex);
                NoConnection page = new NoConnection();
                RakibsTraders.popUp(page);
            }
            
            
        }
        
        
        
    }//GEN-LAST:event_jButtonUpdateActionPerformed

    private void jComboBox1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBox1FocusGained
        // TODO add your handling code here:
       String user = txtUserNameValue.getText();
       char[] passArray = userPassF.getPassword();
       String pass = String.valueOf(passArray);
        
        if( pass.equals("") ){
            userPassF.grabFocus();
        }
        else{
            jLabel1Right1.setVisible(true);
        }
        
    }//GEN-LAST:event_jComboBox1FocusGained

    private void jComboBox2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBox2FocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2FocusGained

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditUser().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Background;
    private javax.swing.JButton btnRefrash1;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JButton jButtonSubmit1;
    private javax.swing.JButton jButtonUpdate;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1Right;
    private javax.swing.JLabel jLabel1Right1;
    private javax.swing.JLabel jLabel1Right2;
    private javax.swing.JLabel jLabel1Right3;
    private javax.swing.JLabel jLabelEror;
    private javax.swing.JLabel jLabelEror1;
    private javax.swing.JLabel jLabelEror2;
    private javax.swing.JLabel lbUSERNAME;
    private javax.swing.JLabel lbUSERNAME1;
    private javax.swing.JLabel lblHome;
    private javax.swing.JLabel lblPageTitle;
    private javax.swing.JLabel lblPageTitle1;
    private javax.swing.JLabel lblStartingDate;
    private javax.swing.JLabel lblStartingDate1;
    private javax.swing.JLabel lblStartingDate2;
    private javax.swing.JLabel lblStartingDate3;
    private javax.swing.JLabel lblStartingDate4;
    private javax.swing.JTextField txtUserNameValue;
    private javax.swing.JTextField txtUserNameValue1;
    private javax.swing.JPasswordField userPassF;
    private javax.swing.JPasswordField userPassF1;
    private javax.swing.JPasswordField userPassF2;
    // End of variables declaration//GEN-END:variables

    //custome variables declaration
    private ArrayList<String> productID = new ArrayList<>();
    private ArrayList<String> companyName = new ArrayList<>();
    private ArrayList<String> model = new ArrayList<>();
    private ArrayList<String> dimension = new ArrayList<>();
    private static EditUser ref;
    private Integer flagTime = 0;
    private JFrame caller;
    //end custom varibles
    
//    public static EditUser getRef(){
//        if(ref==null)
//            ref = new EditUser();
//        return ref;
//    }
    
    
    private void setIcon(){
        this.setIconImage(new ImageIcon(getClass().getResource("/Resources/Icons/Icon.png")).getImage());
    }
    
    public void setFlagTime(){
        if(flagTime==0)
            flagTime=1;
        else
            flagTime=0;
    }
     
    
    
    
    
    public void setCaller(JFrame frame){
        this.caller = frame;
    }
    
    @Override
    public void processWindowEvent(WindowEvent e) {
        if (e.getID() == WindowEvent.WINDOW_CLOSING) {
                caller.setEnabled(true);
                dispose();
        }
    }
}
