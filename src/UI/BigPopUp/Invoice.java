package UI.BigPopUp;

import Database.DBConnectionProvider;
import Others.Functions;
import PDF.createPDF;
import UI.PopUp.AddPayment;
import UI.PopUp.DeletePayment;
import UI.PopUp.NoConnection;
import UI.PopUp.PrintSuccessful;
import UI.PopUp.Save;
import UI.PopUp.Updated;
import UI.Sell;
import java.awt.event.WindowEvent;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.NumberFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.print.PrintException;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import static jdk.nashorn.internal.objects.NativeString.trim;
import rakibs.traders.RakibsTraders;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author hasan
 * 
 * 
 */


public class Invoice extends javax.swing.JFrame {

    /**
     * Creates new form Invoice
     */
    public Invoice() {
        initComponents();
        setIcon();
    }
    
    /*
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelLogo = new javax.swing.JLabel();
        jScrollPanePaymentHistory = new javax.swing.JScrollPane();
        jLabeltotaltAmount = new javax.swing.JLabel();
        jLabelDiscount = new javax.swing.JLabel();
        jLabelDiscountAmount = new javax.swing.JLabel();
        jLabelLabour = new javax.swing.JLabel();
        jLabellabourCost = new javax.swing.JLabel();
        jLabelNetAmount = new javax.swing.JLabel();
        jLabelNetAmountMoney = new javax.swing.JLabel();
        jLabelPaid = new javax.swing.JLabel();
        jLabelPaidAmount = new javax.swing.JLabel();
        jLabelChangeAmount = new javax.swing.JLabel();
        jLabelChange = new javax.swing.JLabel();
        jLabelDue = new javax.swing.JLabel();
        jLabelDueAmount = new javax.swing.JLabel();
        jLabelTotal = new javax.swing.JLabel();
        lblInvoiceIDValue = new javax.swing.JLabel();
        lblInvoiceID = new javax.swing.JLabel();
        jButtonDeletePayment = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        lblCustomerName = new javax.swing.JLabel();
        lblCustomerNameValue = new javax.swing.JLabel();
        lbCustomerID = new javax.swing.JLabel();
        lblCustomerIDvalue = new javax.swing.JLabel();
        lblPhone = new javax.swing.JLabel();
        lblPhoneValue = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        lblEmailValue = new javax.swing.JLabel();
        jButtonSave = new javax.swing.JButton();
        jScrollPaneProductDetails = new javax.swing.JScrollPane();
        lblInvoiceID1 = new javax.swing.JLabel();
        lblInvoiceID2 = new javax.swing.JLabel();
        jButtonAddPayment = new javax.swing.JButton();
        jLabelDeductedCashBack = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabelBackground = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabelLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/Logo.png"))); // NOI18N
        getContentPane().add(jLabelLogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 10, 130, 60));
        getContentPane().add(jScrollPanePaymentHistory, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 140, 320, 220));

        jLabeltotaltAmount.setForeground(new java.awt.Color(204, 204, 204));
        jLabeltotaltAmount.setText("0.0000");
        getContentPane().add(jLabeltotaltAmount, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 380, 120, 20));

        jLabelDiscount.setForeground(new java.awt.Color(204, 204, 204));
        jLabelDiscount.setText("Discount( Tk ):");
        getContentPane().add(jLabelDiscount, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 400, 110, 20));

        jLabelDiscountAmount.setForeground(new java.awt.Color(204, 204, 204));
        jLabelDiscountAmount.setText("0.0000");
        getContentPane().add(jLabelDiscountAmount, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 400, 90, 20));

        jLabelLabour.setForeground(new java.awt.Color(204, 204, 204));
        jLabelLabour.setText("Labour:");
        getContentPane().add(jLabelLabour, new org.netbeans.lib.awtextra.AbsoluteConstraints(851, 420, 90, 20));

        jLabellabourCost.setForeground(new java.awt.Color(204, 204, 204));
        jLabellabourCost.setText("0.0000");
        getContentPane().add(jLabellabourCost, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 420, 120, 20));

        jLabelNetAmount.setForeground(new java.awt.Color(204, 204, 204));
        jLabelNetAmount.setText("Net Amount:");
        getContentPane().add(jLabelNetAmount, new org.netbeans.lib.awtextra.AbsoluteConstraints(851, 440, 90, 20));

        jLabelNetAmountMoney.setForeground(new java.awt.Color(204, 204, 204));
        jLabelNetAmountMoney.setText("0.0000");
        getContentPane().add(jLabelNetAmountMoney, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 440, 120, 20));

        jLabelPaid.setForeground(new java.awt.Color(204, 204, 204));
        jLabelPaid.setText("Paid:");
        getContentPane().add(jLabelPaid, new org.netbeans.lib.awtextra.AbsoluteConstraints(851, 460, 90, 20));

        jLabelPaidAmount.setForeground(new java.awt.Color(204, 204, 204));
        jLabelPaidAmount.setText("0.0000");
        getContentPane().add(jLabelPaidAmount, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 460, 120, 20));

        jLabelChangeAmount.setForeground(new java.awt.Color(204, 204, 204));
        jLabelChangeAmount.setText("0.0000");
        getContentPane().add(jLabelChangeAmount, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 480, 130, 20));

        jLabelChange.setForeground(new java.awt.Color(204, 204, 204));
        jLabelChange.setText("Change:");
        getContentPane().add(jLabelChange, new org.netbeans.lib.awtextra.AbsoluteConstraints(851, 480, 90, 20));

        jLabelDue.setForeground(new java.awt.Color(204, 204, 204));
        jLabelDue.setText("Due:");
        getContentPane().add(jLabelDue, new org.netbeans.lib.awtextra.AbsoluteConstraints(851, 500, 90, 20));

        jLabelDueAmount.setForeground(new java.awt.Color(204, 204, 204));
        jLabelDueAmount.setText("0.0000");
        getContentPane().add(jLabelDueAmount, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 500, 110, 20));

        jLabelTotal.setForeground(new java.awt.Color(204, 204, 204));
        jLabelTotal.setText("Total:");
        getContentPane().add(jLabelTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(851, 380, 90, 20));

        lblInvoiceIDValue.setFont(new java.awt.Font("Titillium Web", 0, 24)); // NOI18N
        lblInvoiceIDValue.setForeground(new java.awt.Color(204, 204, 204));
        lblInvoiceIDValue.setText("#id");
        getContentPane().add(lblInvoiceIDValue, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 20, 190, -1));

        lblInvoiceID.setFont(new java.awt.Font("Titillium Web", 0, 18)); // NOI18N
        lblInvoiceID.setForeground(new java.awt.Color(67, 196, 114));
        lblInvoiceID.setText("Product Details");
        getContentPane().add(lblInvoiceID, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 100, 170, -1));

        jButtonDeletePayment.setBackground(new java.awt.Color(255, 0, 0));
        jButtonDeletePayment.setFont(new java.awt.Font("Titillium Web", 1, 12)); // NOI18N
        jButtonDeletePayment.setForeground(new java.awt.Color(255, 255, 255));
        jButtonDeletePayment.setText("Delete payment");
        jButtonDeletePayment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeletePaymentActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonDeletePayment, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 370, 160, 30));

        jButton2.setBackground(new java.awt.Color(0, 153, 102));
        jButton2.setFont(new java.awt.Font("Titillium Web", 1, 12)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Save & Print");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 500, 150, 30));

        lblCustomerName.setFont(new java.awt.Font("Titillium Web", 0, 15)); // NOI18N
        lblCustomerName.setForeground(new java.awt.Color(204, 204, 204));
        lblCustomerName.setText("Customer Name: ");
        getContentPane().add(lblCustomerName, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 60, 130, -1));

        lblCustomerNameValue.setFont(new java.awt.Font("Titillium Web", 0, 15)); // NOI18N
        lblCustomerNameValue.setForeground(new java.awt.Color(204, 204, 204));
        lblCustomerNameValue.setText("#Customer Name ");
        getContentPane().add(lblCustomerNameValue, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 60, 140, -1));

        lbCustomerID.setFont(new java.awt.Font("Titillium Web", 0, 15)); // NOI18N
        lbCustomerID.setForeground(new java.awt.Color(204, 204, 204));
        lbCustomerID.setText("Customer ID:");
        getContentPane().add(lbCustomerID, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 60, 100, 30));

        lblCustomerIDvalue.setFont(new java.awt.Font("Titillium Web", 0, 15)); // NOI18N
        lblCustomerIDvalue.setForeground(new java.awt.Color(204, 204, 204));
        lblCustomerIDvalue.setText("#Customer ID");
        getContentPane().add(lblCustomerIDvalue, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 60, 230, 30));

        lblPhone.setFont(new java.awt.Font("Titillium Web", 0, 15)); // NOI18N
        lblPhone.setForeground(new java.awt.Color(204, 204, 204));
        lblPhone.setText("Phone");
        getContentPane().add(lblPhone, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 20, 100, 30));

        lblPhoneValue.setFont(new java.awt.Font("Titillium Web", 0, 15)); // NOI18N
        lblPhoneValue.setForeground(new java.awt.Color(204, 204, 204));
        lblPhoneValue.setText("Phone Numbers");
        getContentPane().add(lblPhoneValue, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 20, 280, 30));

        lblEmail.setFont(new java.awt.Font("Titillium Web", 0, 15)); // NOI18N
        lblEmail.setForeground(new java.awt.Color(204, 204, 204));
        lblEmail.setText("Email");
        getContentPane().add(lblEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 40, 100, 30));

        lblEmailValue.setFont(new java.awt.Font("Titillium Web", 0, 15)); // NOI18N
        lblEmailValue.setForeground(new java.awt.Color(204, 204, 204));
        lblEmailValue.setText("Email@email.com");
        getContentPane().add(lblEmailValue, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 40, 210, 30));

        jButtonSave.setBackground(new java.awt.Color(0, 0, 153));
        jButtonSave.setFont(new java.awt.Font("Titillium Web", 1, 12)); // NOI18N
        jButtonSave.setForeground(new java.awt.Color(255, 255, 255));
        jButtonSave.setText("Save");
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 500, 150, 30));
        getContentPane().add(jScrollPaneProductDetails, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 140, 680, 220));

        lblInvoiceID1.setFont(new java.awt.Font("Titillium Web", 0, 24)); // NOI18N
        lblInvoiceID1.setForeground(new java.awt.Color(204, 204, 204));
        lblInvoiceID1.setText("Invoice ID:");
        getContentPane().add(lblInvoiceID1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 20, 170, -1));

        lblInvoiceID2.setFont(new java.awt.Font("Titillium Web", 0, 18)); // NOI18N
        lblInvoiceID2.setForeground(new java.awt.Color(67, 196, 114));
        lblInvoiceID2.setText("Payment History");
        getContentPane().add(lblInvoiceID2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 100, 170, -1));

        jButtonAddPayment.setBackground(new java.awt.Color(67, 196, 114));
        jButtonAddPayment.setFont(new java.awt.Font("Titillium Web", 1, 12)); // NOI18N
        jButtonAddPayment.setForeground(new java.awt.Color(255, 255, 255));
        jButtonAddPayment.setText("Add Payment");
        jButtonAddPayment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddPaymentActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonAddPayment, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 370, 150, 30));

        jLabelDeductedCashBack.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(jLabelDeductedCashBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 360, 190, 50));

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Deducted Cash of Returned Product :");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 360, 220, 50));

        jLabelBackground.setForeground(new java.awt.Color(255, 255, 255));
        jLabelBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/background.png"))); // NOI18N
        getContentPane().add(jLabelBackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1100, 600));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonDeletePaymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeletePaymentActionPerformed
        // TODO add your handling code here:
        DeletePayment page = new DeletePayment();
        page.setValue( lblInvoiceIDValue.getText(),jLabelPaidAmount.getText(),1);
        page.setCaller(this);
        this.setEnabled(false);
        RakibsTraders.popUp(page);
    }//GEN-LAST:event_jButtonDeletePaymentActionPerformed

    private void jButtonAddPaymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddPaymentActionPerformed
        // TODO add your handling code here:
        AddPayment page = new AddPayment();
        page.setValue(lblInvoiceIDValue.getText(),1);
        page.setCaller(this);
        this.setEnabled(false);
        RakibsTraders.popUp(page);
    }//GEN-LAST:event_jButtonAddPaymentActionPerformed
    
    public boolean AccessSave = false; // will true if save button is clicked from other page rather than this page.

    
    public void saveInvoice(){
        Connection con = DBConnectionProvider.getDBConnection();
        String query1 = "insert into invoice_list (invoice_ID,customer_ID,time,date,discount,labour_cost,total) VALUES(?,?,?,?,?,?,?)";
        String query2 = "insert into invoice_products (invoice_ID,product_ID,Box, Pcs,feet,price,profit) VALUES (?,?,?,?,?,?,?)";   
        String query3 = "SELECT * FROM stock WHERE products_id = ?";
        String query4 = "UPDATE `stock` SET `left` = ? WHERE `stock`.`products_id` = ?";
        String query5 = "SELECT purchase_price FROM products WHERE products_id = ?";
        String date = timeAndDate.substring(timeAndDate.indexOf("M")+1);
        String time = timeAndDate.substring(0, timeAndDate.indexOf("M")+1);
        
        try{
            PreparedStatement pstmt1 = con.prepareStatement(query1);
            PreparedStatement pstmt2 = con.prepareStatement(query2);
            PreparedStatement pstmt3 = con.prepareStatement(query3);
            PreparedStatement pstmt4 = con.prepareStatement(query4);
            PreparedStatement pstmt5 = con.prepareStatement(query5);
            pstmt1.setString(1, lblInvoiceIDValue.getText());
            pstmt1.setString(2, lblCustomerIDvalue.getText());
            pstmt1.setString(3, time);
//            System.err.println(date + "fff");
            String[] splitDate = date.split("/");
            date = trim(splitDate[2]) + "-" + trim(splitDate[1]) + "-" + trim(splitDate[0]);
            pstmt1.setString(4, date);
            pstmt1.setDouble(5, Double.parseDouble(jLabelDiscountAmount.getText()));
            pstmt1.setDouble(6, Double.parseDouble(jLabellabourCost.getText()));
            pstmt1.setDouble(7, Double.parseDouble(jLabelNetAmountMoney.getText()));
            pstmt1.executeUpdate();
            Double discountPerProduct = Double.parseDouble(jLabelDiscountAmount.getText()) / productTable.getRowCount();
           
            Integer row=0;
            for( int i=0; i<productTable.getRowCount(); i++ ){
                
                pstmt2.setString(1,lblInvoiceIDValue.getText());
                String productId = (String) productTable.getModel().getValueAt(row,0);
                pstmt2.setString(2,productId);
                String sellAmount= "0.0";
                if( ( productTable.getModel().getValueAt(row,6).equals("Box")) || (( productTable.getModel().getValueAt(row,6).equals("box"))) ){
                    String sellAmountBox =  productTable.getModel().getValueAt(row,3)+"";
                    String sellAmountPcs =  productTable.getModel().getValueAt(row,4)+"";
                    if(sellAmountBox.equals("")) sellAmountBox = "0";
                    if(sellAmountPcs.equals("")) sellAmountBox = "0";
                    sellAmount = Double.toString(Functions.boxAndPcsToBox(Double.parseDouble(sellAmountBox), Double.parseDouble(sellAmountPcs), productId));
                    System.out.println("amount: "+sellAmount);
                    pstmt2.setString(3, sellAmount);
                    pstmt2.setString(4, "--");
                    pstmt2.setString(5, "--");
                }
                else if( ( productTable.getModel().getValueAt(row,6).equals("pcs")) || (( productTable.getModel().getValueAt(row,6).equals("Pcs"))) ){
                    String sellAmountBox =  productTable.getModel().getValueAt(row,3)+"";
                    String sellAmountPcs =  productTable.getModel().getValueAt(row,4)+"";
                    if(sellAmountBox.equals("")) sellAmountBox = "0";
                    if(sellAmountPcs.equals("")) sellAmountBox = "0";
                    sellAmount = Double.toString(Functions.boxAndPcsToPcs(Double.parseDouble(sellAmountBox), Double.parseDouble(sellAmountPcs), productId));
                    //sellAmount =  "" + productTable.getModel().getValueAt(row,4);
                    pstmt2.setString(3, "--");
                    pstmt2.setString(4, sellAmount);
                    pstmt2.setString(5, "--");
                }
                else if( ( productTable.getModel().getValueAt(row,6).equals("feet")) || (( productTable.getModel().getValueAt(row,6).equals("Feet"))) ){
                    sellAmount =  productTable.getModel().getValueAt(row,5) + "";
                    pstmt2.setString(3, "--");
                    pstmt2.setString(4, "--");
                    pstmt2.setString(5,sellAmount);
                }
                
                Double price =  (Double) productTable.getModel().getValueAt(row,8);
                pstmt5.setString(1,productId);
                ResultSet rs5 = pstmt5.executeQuery();
                Double buyPrice = 0.0;
                while(rs5.next())
                    buyPrice = rs5.getDouble("purchase_price");
                Double profit = price - (buyPrice*Double.parseDouble(sellAmount)) - discountPerProduct;
                NumberFormat nf = NumberFormat.getInstance();
                nf.setMaximumFractionDigits(2);            
                nf.setGroupingUsed(false);
                profit = Double.parseDouble(nf.format(profit));
                pstmt2.setDouble(6,price);
                pstmt2.setDouble(7,profit);
                pstmt2.executeUpdate();
                pstmt3.setString(1, productId);
                ResultSet rs = pstmt3.executeQuery();
                Double left=0.0;
                while(rs.next())
                     left = rs.getDouble("left")- Double.parseDouble(sellAmount);
                System.out.println("left: "+left);
                pstmt4.setDouble(1, left);
                pstmt4.setString(2, productId);
                pstmt4.executeUpdate();
                row++;
            }
            Sell page = Sell.getRef();
            page.clear();
            caller.setEnabled(true); 
            Save sPage = new Save();
            RakibsTraders.popUp(sPage);
            this.dispose();
        }
        catch(Exception ex){
            System.out.println("Failed to get DBConn:: "+ex.getMessage());
            NoConnection no = new NoConnection();
            RakibsTraders.popUp(no);
        }
    }
    
    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed
        // TODO add your handling code here:
       if( AccessSave == false ){
           saveInvoice();
           
       }
       else{
            AccessSave = false;
            Updated page = new Updated();
            RakibsTraders.popUp(page);
            //InvoiceList Ipage = InvoiceList.getRef();
            caller.setEnabled(true);
            this.dispose();
       }
    }//GEN-LAST:event_jButtonSaveActionPerformed
   
    DefaultTableModel data = new DefaultTableModel(new String[]{"Products ID", "Company Name", "Model", "BOX","PCS","FEET" ,"Unit", "Unit Price", "Total"}, 0);
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:

        createPDF page = new createPDF();
        
        page.setData(timeAndDate, lblInvoiceIDValue.getText(), lblCustomerNameValue.getText(), lblPhoneValue.getText(), lblCustomerIDvalue.getText(),productTable2,jLabeltotaltAmount.getText(),
                    jLabelDiscountAmount.getText(),jLabellabourCost.getText(), jLabelNetAmountMoney.getText(),jLabelPaidAmount.getText(),jLabelChangeAmount.getText(),jLabelDueAmount.getText());
        page.gen();
        try {
                page.printPdf();
            } catch (PrintException ex) {
                Logger.getLogger(Invoice.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Invoice.class.getName()).log(Level.SEVERE, null, ex);
            }
        
        if( AccessSave == false ) { 
            
            saveInvoice();
        
        }
        this.caller.setEnabled(true);
        this.dispose();
//        PrintSuccessful page2 = new PrintSuccessful();
//        RakibsTraders.popUp(page2);
        
    }//GEN-LAST:event_jButton2ActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Invoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Invoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Invoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Invoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Invoice().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButtonAddPayment;
    private javax.swing.JButton jButtonDeletePayment;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelBackground;
    private javax.swing.JLabel jLabelChange;
    private javax.swing.JLabel jLabelChangeAmount;
    private javax.swing.JLabel jLabelDeductedCashBack;
    private javax.swing.JLabel jLabelDiscount;
    private javax.swing.JLabel jLabelDiscountAmount;
    private javax.swing.JLabel jLabelDue;
    private javax.swing.JLabel jLabelDueAmount;
    private javax.swing.JLabel jLabelLabour;
    private javax.swing.JLabel jLabelLogo;
    private javax.swing.JLabel jLabelNetAmount;
    private javax.swing.JLabel jLabelNetAmountMoney;
    private javax.swing.JLabel jLabelPaid;
    private javax.swing.JLabel jLabelPaidAmount;
    private javax.swing.JLabel jLabelTotal;
    private javax.swing.JLabel jLabellabourCost;
    private javax.swing.JLabel jLabeltotaltAmount;
    private javax.swing.JScrollPane jScrollPanePaymentHistory;
    private javax.swing.JScrollPane jScrollPaneProductDetails;
    private javax.swing.JLabel lbCustomerID;
    private javax.swing.JLabel lblCustomerIDvalue;
    private javax.swing.JLabel lblCustomerName;
    private javax.swing.JLabel lblCustomerNameValue;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblEmailValue;
    private javax.swing.JLabel lblInvoiceID;
    private javax.swing.JLabel lblInvoiceID1;
    private javax.swing.JLabel lblInvoiceID2;
    private javax.swing.JLabel lblInvoiceIDValue;
    private javax.swing.JLabel lblPhone;
    private javax.swing.JLabel lblPhoneValue;
    // End of variables declaration//GEN-END:variables

    //custome variables
    private JTable productTable = new JTable();
    private JTable productTable2 = new JTable();
    private JTable paymentTable = new JTable();
    DefaultTableModel paymentData = new DefaultTableModel(new String[]{"Invoice ID", "Receipt id", "Date", "Time", "Payment method", "paid Amount"}, 0);
    private String timeAndDate;
    private static Invoice ref;
    private double deductedVal = 0.0;
    private JFrame caller;
    private boolean payment_flag = false;  
    //end of custom variables
    
    
    private void setIcon(){
        this.setIconImage(new ImageIcon(getClass().getResource("/Resources/Icons/Icon.png")).getImage());
    }
    
    public void setDedctVal( Double val ){
        this.deductedVal = val;
        jLabelDeductedCashBack.setText(Double.toString(deductedVal));
    }
    
    public void setData(String timeanddate, String invoiceID, String customerID, String Total, String discount, String labourCost, String netpayable,  DefaultTableModel data){
        this.timeAndDate = timeanddate;
        this.lblInvoiceIDValue.setText(invoiceID);
        this.lblCustomerIDvalue.setText(customerID);
        this.productTable.setModel(data);
        this.jLabeltotaltAmount.setText(Total);
        this.jLabelDiscountAmount.setText(discount);
        this.jLabellabourCost.setText(labourCost);
        this.jLabelNetAmountMoney.setText(netpayable);
        setCustomerField();
        setTables(invoiceID);
    }
    
    
    private void updatePriceFields(){
        Double totalPaid = 0.0;
        if( paymentTable.getRowCount() > 0 ){
            Integer row=0;
            for(int i=0; i<paymentTable.getRowCount(); i++)
                totalPaid += (Double) paymentTable.getModel().getValueAt(i,5);
        }
        Double netPay = Double.parseDouble(jLabelNetAmountMoney.getText());
        //System.out.println(""+netPay);
        jLabelPaidAmount.setText("" + totalPaid);
        Double totalChange = totalPaid - netPay;
        NumberFormat nf = NumberFormat.getInstance();
        nf.setMaximumFractionDigits(2);            
        nf.setGroupingUsed(false);
        totalChange = Double.parseDouble(nf.format(totalChange));
//        System.out.println( totalPaid + " "+totalChange);
        
        if( totalChange < 0.0 ){ 
            jLabelChangeAmount.setText("0.00");
            jLabelDueAmount.setText(String.format("%.4f", (totalChange * (-1.0))));
        }
        else if( totalChange > 0.0 ){ 
            jLabelChangeAmount.setText(totalChange + "");
            jLabelDueAmount.setText("0.00");
        }
        else if( totalChange == 0.0 ){
            jLabelChangeAmount.setText("0.00");
            jLabelDueAmount.setText("0.00");
        }
    }
    
    public void setTables( String invoiceID ){
        productTable2 = productTable;
        jScrollPaneProductDetails.getViewport().add(productTable);
        //clear the default invoice_payment to null
        if (paymentData.getRowCount() > 0) {
            for (int i = paymentData.getRowCount() - 1; i > -1; i--) {
                paymentData.removeRow(i);
            }
        }
        
        Connection con = DBConnectionProvider.getDBConnection();
        String query = "SELECT * FROM `payment` WHERE ID = ?";
        String in_ID;
        Integer rc_ID;
        String date;
        String time;
        String pay_meth;
        Double paid;
        try{
            PreparedStatement pstmt = con.prepareStatement(query);
            pstmt.setString(1,invoiceID);
            ResultSet rs = pstmt.executeQuery();
            while(rs.next()){
              in_ID = rs.getString("ID");
              rc_ID = rs.getInt("receipt_ID");
              date = rs.getString("date");
              time = rs.getString("time");
              pay_meth = rs.getString("payment_method");
              paid = rs.getDouble("paid_amount");
              paymentData.addRow(new Object[]{in_ID, rc_ID, date, time, pay_meth, paid});
              paymentTable.setModel(paymentData);
              jScrollPanePaymentHistory.getViewport().add(paymentTable);
              
            }
        }catch(Exception ex){
            System.out.println("Failed to get DBConn:: "+ex.getMessage());
            NoConnection no = new NoConnection();
            RakibsTraders.popUp(no);
        }
        updatePriceFields();
    }
    
    private void setCustomerField(){
        Connection con = DBConnectionProvider.getDBConnection();
        String query = "SELECT * FROM customer WHERE customer_ID = ?";
        try{
            PreparedStatement pstmt = con.prepareStatement(query);
            String customerID = this.lblCustomerIDvalue.getText();
            pstmt.setString(1,customerID);
            ResultSet rs = pstmt.executeQuery();
            while(rs.next()){
              this.lblCustomerNameValue.setText(rs.getString("customer_name"));
              this.lblPhoneValue.setText(rs.getString("phone_number1") + ", " + rs.getString("phone_number2"));
              this.lblEmailValue.setText(rs.getString("mail"));
            }
        }catch(Exception ex){
            System.out.println("Failed to get DBConn:: "+ex.getMessage());
            NoConnection no = new NoConnection();
            RakibsTraders.popUp(no);
        }
    }
    
    public static Invoice getRef(){
        if(ref==null)
            ref = new Invoice();
        return ref;
    }
    
    public void setCaller(JFrame frame){
        this.caller = frame;
    }
    
    public void setPaymentFlag(){
        this.payment_flag = true;
    }
    
    @Override
    public void processWindowEvent(WindowEvent e) {
        if (e.getID() == WindowEvent.WINDOW_CLOSING) {
            if(!payment_flag){
                caller.setEnabled(true);
                dispose();
            }
            else if(AccessSave)
            {
                caller.setEnabled(true);
                dispose();
            }
            
        }
    }
}
